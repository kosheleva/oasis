openapi: 3.0.1
info:
  title: Noosa POS API
  description: Noosa POS API
  version: 1.0.0
  contact:
    name: Dan
    url: Zamir
    email: dan@noosa.io
servers:
  - url: 'http://localhost:3000/api'
    description: Localhost
  - url: 'https://noosa-api-dev.herokuapp.com/api'
    description: Dev
  - url: 'https://noosa-api-staging.herokuapp.com/api'
    description: Staging
tags:
  - name: RoleMapping
    description: Map principals to roles
  - name: Role
  - name: user
  - name: merchant
  - name: store
  - name: appVersion
  - name: consumer
  - name: transaction
  - name: otp
  - name: card
  - name: paymentRequest
  - name: notificationToken
  - name: SummaryMessage
paths:
  '/RoleMappings/{id}/role':
    get:
      tags:
        - RoleMapping
      description: Fetches belongsTo relation role.
      summary: Fetches belongsTo relation role.
      operationId: RoleMapping.prototype.__get__role
      parameters:
        - name: id
          in: path
          description: RoleMapping id
          required: true
          schema:
            type: string
            format: JSON
        - name: refresh
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
            application/xml:
              schema:
                $ref: '#/components/schemas/Role'
            text/xml:
              schema:
                $ref: '#/components/schemas/Role'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Role'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Role'
      deprecated: false
  /RoleMappings:
    get:
      tags:
        - RoleMapping
      description: Find all instances of the model matched by filter from the data source.
      summary: Find all instances of the model matched by filter from the data source.
      operationId: RoleMapping.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{"where":{"something":"value"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.'
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleMapping'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleMapping'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleMapping'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleMapping'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleMapping'
      deprecated: false
    put:
      tags:
        - RoleMapping
      description: Replace an existing model instance or insert a new one into the data source.
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: RoleMapping.replaceOrCreate__put_RoleMappings
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          application/xml:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          text/xml:
            schema:
              $ref: '#/components/schemas/RoleMapping'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
      deprecated: false
      x-codegen-request-body-name: data
    post:
      tags:
        - RoleMapping
      description: Create a new instance of the model and persist it into the data source.
      summary: Create a new instance of the model and persist it into the data source.
      operationId: RoleMapping.create
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new_RoleMapping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/new_RoleMapping'
          application/xml:
            schema:
              $ref: '#/components/schemas/new_RoleMapping'
          text/xml:
            schema:
              $ref: '#/components/schemas/new_RoleMapping'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
      deprecated: false
      x-codegen-request-body-name: data
    patch:
      tags:
        - RoleMapping
      description: Patch an existing model instance or insert a new one into the data source.
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: RoleMapping.patchOrCreate
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          application/xml:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          text/xml:
            schema:
              $ref: '#/components/schemas/RoleMapping'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
      deprecated: false
      x-codegen-request-body-name: data
  /RoleMappings/replaceOrCreate:
    post:
      tags:
        - RoleMapping
      description: Replace an existing model instance or insert a new one into the data source.
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: RoleMapping.replaceOrCreate__post_RoleMappings_replaceOrCreate
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          application/xml:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          text/xml:
            schema:
              $ref: '#/components/schemas/RoleMapping'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
      deprecated: false
      x-codegen-request-body-name: data
  /RoleMappings/upsertWithWhere:
    post:
      tags:
        - RoleMapping
      description: Update an existing model instance or insert a new one into the data source based on the where criteria.
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: RoleMapping.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          application/xml:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          text/xml:
            schema:
              $ref: '#/components/schemas/RoleMapping'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
      deprecated: false
      x-codegen-request-body-name: data
  '/RoleMappings/{id}/exists':
    get:
      tags:
        - RoleMapping
      description: Check whether a model instance exists in the data source.
      summary: Check whether a model instance exists in the data source.
      operationId: RoleMapping.exists__get_RoleMappings__exists
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
      deprecated: false
  '/RoleMappings/{id}':
    get:
      tags:
        - RoleMapping
      description: 'Find a model instance by {{id}} from the data source.'
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: RoleMapping.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
      deprecated: false
    put:
      tags:
        - RoleMapping
      description: Replace attributes for a model instance and persist it into the data source.
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: RoleMapping.replaceById__put_RoleMappings_
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          application/xml:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          text/xml:
            schema:
              $ref: '#/components/schemas/RoleMapping'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
      deprecated: false
      x-codegen-request-body-name: data
    delete:
      tags:
        - RoleMapping
      description: 'Delete a model instance by {{id}} from the data source.'
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: RoleMapping.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    head:
      tags:
        - RoleMapping
      description: Check whether a model instance exists in the data source.
      summary: Check whether a model instance exists in the data source.
      operationId: RoleMapping.exists__head_RoleMappings_
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
      deprecated: false
    patch:
      tags:
        - RoleMapping
      description: Patch attributes for a model instance and persist it into the data source.
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: RoleMapping.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: RoleMapping id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          application/xml:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          text/xml:
            schema:
              $ref: '#/components/schemas/RoleMapping'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
      deprecated: false
      x-codegen-request-body-name: data
  '/RoleMappings/{id}/replace':
    post:
      tags:
        - RoleMapping
      description: Replace attributes for a model instance and persist it into the data source.
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: RoleMapping.replaceById__post_RoleMappings__replace
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          application/xml:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          text/xml:
            schema:
              $ref: '#/components/schemas/RoleMapping'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
      deprecated: false
      x-codegen-request-body-name: data
  /RoleMappings/findOne:
    get:
      tags:
        - RoleMapping
      description: Find first instance of the model matched by filter from the data source.
      summary: Find first instance of the model matched by filter from the data source.
      operationId: RoleMapping.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{"where":{"something":"value"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.'
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
      deprecated: false
  /RoleMappings/update:
    post:
      tags:
        - RoleMapping
      description: 'Update instances of the model matched by {{where}} from the data source.'
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: RoleMapping.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          application/xml:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          text/xml:
            schema:
              $ref: '#/components/schemas/RoleMapping'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: The number of instances updated
                    format: double
                description: Information related to the outcome of the operation
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: The number of instances updated
                    format: double
                description: Information related to the outcome of the operation
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: The number of instances updated
                    format: double
                description: Information related to the outcome of the operation
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: The number of instances updated
                    format: double
                description: Information related to the outcome of the operation
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: The number of instances updated
                    format: double
                description: Information related to the outcome of the operation
      deprecated: false
      x-codegen-request-body-name: data
  /RoleMappings/count:
    get:
      tags:
        - RoleMapping
      description: Count instances of the model matched by where from the data source.
      summary: Count instances of the model matched by where from the data source.
      operationId: RoleMapping.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /RoleMappings/change-stream:
    get:
      tags:
        - RoleMapping
      description: Create a change stream.
      summary: Create a change stream.
      operationId: RoleMapping.createChangeStream__get_RoleMappings_change-stream
      parameters:
        - name: options
          in: query
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: string
                format: binary
            application/xml:
              schema:
                type: string
                format: binary
            text/xml:
              schema:
                type: string
                format: binary
            application/javascript:
              schema:
                type: string
                format: binary
            text/javascript:
              schema:
                type: string
                format: binary
      deprecated: false
    post:
      tags:
        - RoleMapping
      description: Create a change stream.
      summary: Create a change stream.
      operationId: RoleMapping.createChangeStream__post_RoleMappings_change-stream
      requestBody:
        content:
          application/json:
            schema:
              properties:
                options:
                  type: string
                  format: JSON
          application/x-www-form-urlencoded:
            schema:
              properties:
                options:
                  type: string
                  format: JSON
          application/xml:
            schema:
              properties:
                options:
                  type: string
                  format: JSON
          text/xml:
            schema:
              properties:
                options:
                  type: string
                  format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: string
                format: binary
            application/xml:
              schema:
                type: string
                format: binary
            text/xml:
              schema:
                type: string
                format: binary
            application/javascript:
              schema:
                type: string
                format: binary
            text/javascript:
              schema:
                type: string
                format: binary
      deprecated: false
  '/Roles/{id}/principals/{fk}':
    get:
      tags:
        - Role
      description: Find a related item by id for principals.
      summary: Find a related item by id for principals.
      operationId: Role.prototype.__findById__principals
      parameters:
        - name: id
          in: path
          description: Role id
          required: true
          schema:
            type: string
            format: JSON
        - name: fk
          in: path
          description: Foreign key for principals
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
      deprecated: false
    put:
      tags:
        - Role
      description: Update a related item by id for principals.
      summary: Update a related item by id for principals.
      operationId: Role.prototype.__updateById__principals
      parameters:
        - name: id
          in: path
          description: Role id
          required: true
          schema:
            type: string
            format: JSON
        - name: fk
          in: path
          description: Foreign key for principals
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          application/xml:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          text/xml:
            schema:
              $ref: '#/components/schemas/RoleMapping'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
      deprecated: false
      x-codegen-request-body-name: data
    delete:
      tags:
        - Role
      description: Delete a related item by id for principals.
      summary: Delete a related item by id for principals.
      operationId: Role.prototype.__destroyById__principals
      parameters:
        - name: id
          in: path
          description: Role id
          required: true
          schema:
            type: string
            format: JSON
        - name: fk
          in: path
          description: Foreign key for principals
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  '/Roles/{id}/principals':
    get:
      tags:
        - Role
      description: Queries principals of Role.
      summary: Queries principals of Role.
      operationId: Role.prototype.__get__principals
      parameters:
        - name: id
          in: path
          description: Role id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleMapping'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleMapping'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleMapping'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleMapping'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleMapping'
      deprecated: false
    post:
      tags:
        - Role
      description: Creates a new instance in principals of this model.
      summary: Creates a new instance in principals of this model.
      operationId: Role.prototype.__create__principals
      parameters:
        - name: id
          in: path
          description: Role id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new_RoleMapping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/new_RoleMapping'
          application/xml:
            schema:
              $ref: '#/components/schemas/new_RoleMapping'
          text/xml:
            schema:
              $ref: '#/components/schemas/new_RoleMapping'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
      deprecated: false
      x-codegen-request-body-name: data
    delete:
      tags:
        - Role
      description: Deletes all principals of this model.
      summary: Deletes all principals of this model.
      operationId: Role.prototype.__delete__principals
      parameters:
        - name: id
          in: path
          description: Role id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  '/Roles/{id}/principals/count':
    get:
      tags:
        - Role
      description: Counts principals of Role.
      summary: Counts principals of Role.
      operationId: Role.prototype.__count__principals
      parameters:
        - name: id
          in: path
          description: Role id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /Roles:
    get:
      tags:
        - Role
      description: Find all instances of the model matched by filter from the data source.
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Role.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{"where":{"something":"value"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.'
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
      deprecated: false
    put:
      tags:
        - Role
      description: Replace an existing model instance or insert a new one into the data source.
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: Role.replaceOrCreate__put_Roles
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          application/xml:
            schema:
              $ref: '#/components/schemas/Role'
          text/xml:
            schema:
              $ref: '#/components/schemas/Role'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
            application/xml:
              schema:
                $ref: '#/components/schemas/Role'
            text/xml:
              schema:
                $ref: '#/components/schemas/Role'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Role'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Role'
      deprecated: false
      x-codegen-request-body-name: data
    post:
      tags:
        - Role
      description: Create a new instance of the model and persist it into the data source.
      summary: Create a new instance of the model and persist it into the data source.
      operationId: Role.create
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new_Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/new_Role'
          application/xml:
            schema:
              $ref: '#/components/schemas/new_Role'
          text/xml:
            schema:
              $ref: '#/components/schemas/new_Role'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
            application/xml:
              schema:
                $ref: '#/components/schemas/Role'
            text/xml:
              schema:
                $ref: '#/components/schemas/Role'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Role'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Role'
      deprecated: false
      x-codegen-request-body-name: data
    patch:
      tags:
        - Role
      description: Patch an existing model instance or insert a new one into the data source.
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: Role.patchOrCreate
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          application/xml:
            schema:
              $ref: '#/components/schemas/Role'
          text/xml:
            schema:
              $ref: '#/components/schemas/Role'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
            application/xml:
              schema:
                $ref: '#/components/schemas/Role'
            text/xml:
              schema:
                $ref: '#/components/schemas/Role'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Role'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Role'
      deprecated: false
      x-codegen-request-body-name: data
  /Roles/replaceOrCreate:
    post:
      tags:
        - Role
      description: Replace an existing model instance or insert a new one into the data source.
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: Role.replaceOrCreate__post_Roles_replaceOrCreate
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          application/xml:
            schema:
              $ref: '#/components/schemas/Role'
          text/xml:
            schema:
              $ref: '#/components/schemas/Role'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
            application/xml:
              schema:
                $ref: '#/components/schemas/Role'
            text/xml:
              schema:
                $ref: '#/components/schemas/Role'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Role'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Role'
      deprecated: false
      x-codegen-request-body-name: data
  /Roles/upsertWithWhere:
    post:
      tags:
        - Role
      description: Update an existing model instance or insert a new one into the data source based on the where criteria.
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: Role.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          application/xml:
            schema:
              $ref: '#/components/schemas/Role'
          text/xml:
            schema:
              $ref: '#/components/schemas/Role'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
            application/xml:
              schema:
                $ref: '#/components/schemas/Role'
            text/xml:
              schema:
                $ref: '#/components/schemas/Role'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Role'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Role'
      deprecated: false
      x-codegen-request-body-name: data
  '/Roles/{id}/exists':
    get:
      tags:
        - Role
      description: Check whether a model instance exists in the data source.
      summary: Check whether a model instance exists in the data source.
      operationId: Role.exists__get_Roles__exists
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
      deprecated: false
  '/Roles/{id}':
    get:
      tags:
        - Role
      description: 'Find a model instance by {{id}} from the data source.'
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: Role.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
            application/xml:
              schema:
                $ref: '#/components/schemas/Role'
            text/xml:
              schema:
                $ref: '#/components/schemas/Role'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Role'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Role'
      deprecated: false
    put:
      tags:
        - Role
      description: Replace attributes for a model instance and persist it into the data source.
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: Role.replaceById__put_Roles_
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          application/xml:
            schema:
              $ref: '#/components/schemas/Role'
          text/xml:
            schema:
              $ref: '#/components/schemas/Role'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
            application/xml:
              schema:
                $ref: '#/components/schemas/Role'
            text/xml:
              schema:
                $ref: '#/components/schemas/Role'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Role'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Role'
      deprecated: false
      x-codegen-request-body-name: data
    delete:
      tags:
        - Role
      description: 'Delete a model instance by {{id}} from the data source.'
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: Role.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    head:
      tags:
        - Role
      description: Check whether a model instance exists in the data source.
      summary: Check whether a model instance exists in the data source.
      operationId: Role.exists__head_Roles_
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
      deprecated: false
    patch:
      tags:
        - Role
      description: Patch attributes for a model instance and persist it into the data source.
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: Role.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: Role id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          application/xml:
            schema:
              $ref: '#/components/schemas/Role'
          text/xml:
            schema:
              $ref: '#/components/schemas/Role'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
            application/xml:
              schema:
                $ref: '#/components/schemas/Role'
            text/xml:
              schema:
                $ref: '#/components/schemas/Role'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Role'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Role'
      deprecated: false
      x-codegen-request-body-name: data
  '/Roles/{id}/replace':
    post:
      tags:
        - Role
      description: Replace attributes for a model instance and persist it into the data source.
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: Role.replaceById__post_Roles__replace
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          application/xml:
            schema:
              $ref: '#/components/schemas/Role'
          text/xml:
            schema:
              $ref: '#/components/schemas/Role'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
            application/xml:
              schema:
                $ref: '#/components/schemas/Role'
            text/xml:
              schema:
                $ref: '#/components/schemas/Role'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Role'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Role'
      deprecated: false
      x-codegen-request-body-name: data
  /Roles/findOne:
    get:
      tags:
        - Role
      description: Find first instance of the model matched by filter from the data source.
      summary: Find first instance of the model matched by filter from the data source.
      operationId: Role.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{"where":{"something":"value"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.'
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
            application/xml:
              schema:
                $ref: '#/components/schemas/Role'
            text/xml:
              schema:
                $ref: '#/components/schemas/Role'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Role'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Role'
      deprecated: false
  /Roles/update:
    post:
      tags:
        - Role
      description: 'Update instances of the model matched by {{where}} from the data source.'
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: Role.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          application/xml:
            schema:
              $ref: '#/components/schemas/Role'
          text/xml:
            schema:
              $ref: '#/components/schemas/Role'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: The number of instances updated
                    format: double
                description: Information related to the outcome of the operation
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: The number of instances updated
                    format: double
                description: Information related to the outcome of the operation
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: The number of instances updated
                    format: double
                description: Information related to the outcome of the operation
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: The number of instances updated
                    format: double
                description: Information related to the outcome of the operation
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: The number of instances updated
                    format: double
                description: Information related to the outcome of the operation
      deprecated: false
      x-codegen-request-body-name: data
  /Roles/count:
    get:
      tags:
        - Role
      description: Count instances of the model matched by where from the data source.
      summary: Count instances of the model matched by where from the data source.
      operationId: Role.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /Roles/change-stream:
    get:
      tags:
        - Role
      description: Create a change stream.
      summary: Create a change stream.
      operationId: Role.createChangeStream__get_Roles_change-stream
      parameters:
        - name: options
          in: query
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: string
                format: binary
            application/xml:
              schema:
                type: string
                format: binary
            text/xml:
              schema:
                type: string
                format: binary
            application/javascript:
              schema:
                type: string
                format: binary
            text/javascript:
              schema:
                type: string
                format: binary
      deprecated: false
    post:
      tags:
        - Role
      description: Create a change stream.
      summary: Create a change stream.
      operationId: Role.createChangeStream__post_Roles_change-stream
      requestBody:
        content:
          application/json:
            schema:
              properties:
                options:
                  type: string
                  format: JSON
          application/x-www-form-urlencoded:
            schema:
              properties:
                options:
                  type: string
                  format: JSON
          application/xml:
            schema:
              properties:
                options:
                  type: string
                  format: JSON
          text/xml:
            schema:
              properties:
                options:
                  type: string
                  format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: string
                format: binary
            application/xml:
              schema:
                type: string
                format: binary
            text/xml:
              schema:
                type: string
                format: binary
            application/javascript:
              schema:
                type: string
                format: binary
            text/javascript:
              schema:
                type: string
                format: binary
      deprecated: false
  '/users/{id}/accessTokens/{fk}':
    get:
      tags:
        - user
      description: Find a related item by id for accessTokens.
      summary: Find a related item by id for accessTokens.
      operationId: user.prototype.__findById__accessTokens
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
            format: JSON
        - name: fk
          in: path
          description: Foreign key for accessTokens
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccessToken'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessToken'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AccessToken'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AccessToken'
      deprecated: false
    put:
      tags:
        - user
      description: Update a related item by id for accessTokens.
      summary: Update a related item by id for accessTokens.
      operationId: user.prototype.__updateById__accessTokens
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
            format: JSON
        - name: fk
          in: path
          description: Foreign key for accessTokens
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccessToken'
          application/xml:
            schema:
              $ref: '#/components/schemas/AccessToken'
          text/xml:
            schema:
              $ref: '#/components/schemas/AccessToken'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccessToken'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessToken'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AccessToken'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AccessToken'
      deprecated: false
      x-codegen-request-body-name: data
    delete:
      tags:
        - user
      description: Delete a related item by id for accessTokens.
      summary: Delete a related item by id for accessTokens.
      operationId: user.prototype.__destroyById__accessTokens
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
            format: JSON
        - name: fk
          in: path
          description: Foreign key for accessTokens
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  '/users/{id}/roles/{fk}':
    get:
      tags:
        - user
      description: Find a related item by id for roles.
      summary: Find a related item by id for roles.
      operationId: user.prototype.__findById__roles
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
            format: JSON
        - name: fk
          in: path
          description: Foreign key for roles
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
            application/xml:
              schema:
                $ref: '#/components/schemas/Role'
            text/xml:
              schema:
                $ref: '#/components/schemas/Role'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Role'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Role'
      deprecated: false
    put:
      tags:
        - user
      description: Update a related item by id for roles.
      summary: Update a related item by id for roles.
      operationId: user.prototype.__updateById__roles
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
            format: JSON
        - name: fk
          in: path
          description: Foreign key for roles
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          application/xml:
            schema:
              $ref: '#/components/schemas/Role'
          text/xml:
            schema:
              $ref: '#/components/schemas/Role'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
            application/xml:
              schema:
                $ref: '#/components/schemas/Role'
            text/xml:
              schema:
                $ref: '#/components/schemas/Role'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Role'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Role'
      deprecated: false
      x-codegen-request-body-name: data
    delete:
      tags:
        - user
      description: Delete a related item by id for roles.
      summary: Delete a related item by id for roles.
      operationId: user.prototype.__destroyById__roles
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
            format: JSON
        - name: fk
          in: path
          description: Foreign key for roles
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  '/users/{id}/roles/rel/{fk}':
    put:
      tags:
        - user
      description: Add a related item by id for roles.
      summary: Add a related item by id for roles.
      operationId: user.prototype.__link__roles
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
            format: JSON
        - name: fk
          in: path
          description: Foreign key for roles
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          application/xml:
            schema:
              $ref: '#/components/schemas/RoleMapping'
          text/xml:
            schema:
              $ref: '#/components/schemas/RoleMapping'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/xml:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            application/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
            text/javascript:
              schema:
                $ref: '#/components/schemas/RoleMapping'
      deprecated: false
      x-codegen-request-body-name: data
    delete:
      tags:
        - user
      description: Remove the roles relation to an item by id.
      summary: Remove the roles relation to an item by id.
      operationId: user.prototype.__unlink__roles
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
            format: JSON
        - name: fk
          in: path
          description: Foreign key for roles
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
    head:
      tags:
        - user
      description: Check the existence of roles relation to an item by id.
      summary: Check the existence of roles relation to an item by id.
      operationId: user.prototype.__exists__roles
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
            format: JSON
        - name: fk
          in: path
          description: Foreign key for roles
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
            application/javascript:
              schema:
                type: boolean
            text/javascript:
              schema:
                type: boolean
      deprecated: false
  '/users/{id}/accessTokens':
    get:
      tags:
        - user
      description: Queries accessTokens of user.
      summary: Queries accessTokens of user.
      operationId: user.prototype.__get__accessTokens
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessToken'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessToken'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessToken'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessToken'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessToken'
      deprecated: false
    post:
      tags:
        - user
      description: Creates a new instance in accessTokens of this model.
      summary: Creates a new instance in accessTokens of this model.
      operationId: user.prototype.__create__accessTokens
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccessToken'
          application/xml:
            schema:
              $ref: '#/components/schemas/AccessToken'
          text/xml:
            schema:
              $ref: '#/components/schemas/AccessToken'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccessToken'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessToken'
            application/javascript:
              schema:
                $ref: '#/components/schemas/AccessToken'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AccessToken'
      deprecated: false
      x-codegen-request-body-name: data
    delete:
      tags:
        - user
      description: Deletes all accessTokens of this model.
      summary: Deletes all accessTokens of this model.
      operationId: user.prototype.__delete__accessTokens
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  '/users/{id}/accessTokens/count':
    get:
      tags:
        - user
      description: Counts accessTokens of user.
      summary: Counts accessTokens of user.
      operationId: user.prototype.__count__accessTokens
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  '/users/{id}/roles':
    get:
      tags:
        - user
      description: Queries roles of user.
      summary: Queries roles of user.
      operationId: user.prototype.__get__roles
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
      deprecated: false
    post:
      tags:
        - user
      description: Creates a new instance in roles of this model.
      summary: Creates a new instance in roles of this model.
      operationId: user.prototype.__create__roles
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new_Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/new_Role'
          application/xml:
            schema:
              $ref: '#/components/schemas/new_Role'
          text/xml:
            schema:
              $ref: '#/components/schemas/new_Role'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
            application/xml:
              schema:
                $ref: '#/components/schemas/Role'
            text/xml:
              schema:
                $ref: '#/components/schemas/Role'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Role'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Role'
      deprecated: false
      x-codegen-request-body-name: data
    delete:
      tags:
        - user
      description: Deletes all roles of this model.
      summary: Deletes all roles of this model.
      operationId: user.prototype.__delete__roles
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  '/users/{id}/roles/count':
    get:
      tags:
        - user
      description: Counts roles of user.
      summary: Counts roles of user.
      operationId: user.prototype.__count__roles
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
            format: JSON
        - name: where
          in: query
          description: Criteria to match model instances
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /users:
    get:
      tags:
        - user
      description: Find all instances of the model matched by filter from the data source.
      summary: Find all instances of the model matched by filter from the data source.
      operationId: user.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{"where":{"something":"value"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.'
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
      deprecated: false
    put:
      tags:
        - user
      description: Replace an existing model instance or insert a new one into the data source.
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: user.replaceOrCreate__put_users
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/user'
          application/xml:
            schema:
              $ref: '#/components/schemas/user'
          text/xml:
            schema:
              $ref: '#/components/schemas/user'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
            application/xml:
              schema:
                $ref: '#/components/schemas/user'
            text/xml:
              schema:
                $ref: '#/components/schemas/user'
            application/javascript:
              schema:
                $ref: '#/components/schemas/user'
            text/javascript:
              schema:
                $ref: '#/components/schemas/user'
      deprecated: false
      x-codegen-request-body-name: data
    post:
      tags:
        - user
      description: Create a new instance of the model and persist it into the data source.
      summary: Create a new instance of the model and persist it into the data source.
      operationId: user.create
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new_user'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/new_user'
          application/xml:
            schema:
              $ref: '#/components/schemas/new_user'
          text/xml:
            schema:
              $ref: '#/components/schemas/new_user'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
            application/xml:
              schema:
                $ref: '#/components/schemas/user'
            text/xml:
              schema:
                $ref: '#/components/schemas/user'
            application/javascript:
              schema:
                $ref: '#/components/schemas/user'
            text/javascript:
              schema:
                $ref: '#/components/schemas/user'
      deprecated: false
      x-codegen-request-body-name: data
    patch:
      tags:
        - user
      description: Patch an existing model instance or insert a new one into the data source.
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: user.patchOrCreate
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/user'
          application/xml:
            schema:
              $ref: '#/components/schemas/user'
          text/xml:
            schema:
              $ref: '#/components/schemas/user'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
            application/xml:
              schema:
                $ref: '#/components/schemas/user'
            text/xml:
              schema:
                $ref: '#/components/schemas/user'
            application/javascript:
              schema:
                $ref: '#/components/schemas/user'
            text/javascript:
              schema:
                $ref: '#/components/schemas/user'
      deprecated: false
      x-codegen-request-body-name: data
  /users/replaceOrCreate:
    post:
      tags:
        - user
      description: Replace an existing model instance or insert a new one into the data source.
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: user.replaceOrCreate__post_users_replaceOrCreate
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/user'
          application/xml:
            schema:
              $ref: '#/components/schemas/user'
          text/xml:
            schema:
              $ref: '#/components/schemas/user'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
            application/xml:
              schema:
                $ref: '#/components/schemas/user'
            text/xml:
              schema:
                $ref: '#/components/schemas/user'
            application/javascript:
              schema:
                $ref: '#/components/schemas/user'
            text/javascript:
              schema:
                $ref: '#/components/schemas/user'
      deprecated: false
      x-codegen-request-body-name: data
  /users/upsertWithWhere:
    post:
      tags:
        - user
      description: Update an existing model instance or insert a new one into the data source based on the where criteria.
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: user.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/user'
          application/xml:
            schema:
              $ref: '#/components/schemas/user'
          text/xml:
            schema:
              $ref: '#/components/schemas/user'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
            application/xml:
              schema:
                $ref: '#/components/schemas/user'
            text/xml:
              schema:
                $ref: '#/components/schemas/user'
            application/javascript:
              schema:
                $ref: '#/components/schemas/user'
            text/javascript:
              schema:
                $ref: '#/components/schemas/user'
      deprecated: false
      x-codegen-request-body-name: data
  '/users/{id}/exists':
    get:
      tags:
        - user
      description: Check whether a model instance exists in the data source.
      summary: Check whether a model instance exists in the data source.
      operationId: user.exists__get_users__exists
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
      deprecated: false
  '/users/{id}':
    get:
      tags:
        - user
      description: 'Find a model instance by {{id}} from the data source.'
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: user.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
            application/xml:
              schema:
                $ref: '#/components/schemas/user'
            text/xml:
              schema:
                $ref: '#/components/schemas/user'
            application/javascript:
              schema:
                $ref: '#/components/schemas/user'
            text/javascript:
              schema:
                $ref: '#/components/schemas/user'
      deprecated: false
    put:
      tags:
        - user
      description: Replace attributes for a model instance and persist it into the data source.
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: user.replaceById__put_users_
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/user'
          application/xml:
            schema:
              $ref: '#/components/schemas/user'
          text/xml:
            schema:
              $ref: '#/components/schemas/user'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
            application/xml:
              schema:
                $ref: '#/components/schemas/user'
            text/xml:
              schema:
                $ref: '#/components/schemas/user'
            application/javascript:
              schema:
                $ref: '#/components/schemas/user'
            text/javascript:
              schema:
                $ref: '#/components/schemas/user'
      deprecated: false
      x-codegen-request-body-name: data
    delete:
      tags:
        - user
      description: 'Delete a model instance by {{id}} from the data source.'
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: user.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    head:
      tags:
        - user
      description: Check whether a model instance exists in the data source.
      summary: Check whether a model instance exists in the data source.
      operationId: user.exists__head_users_
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
      deprecated: false
    patch:
      tags:
        - user
      description: Patch attributes for a model instance and persist it into the data source.
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: user.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/user'
          application/xml:
            schema:
              $ref: '#/components/schemas/user'
          text/xml:
            schema:
              $ref: '#/components/schemas/user'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
            application/xml:
              schema:
                $ref: '#/components/schemas/user'
            text/xml:
              schema:
                $ref: '#/components/schemas/user'
            application/javascript:
              schema:
                $ref: '#/components/schemas/user'
            text/javascript:
              schema:
                $ref: '#/components/schemas/user'
      deprecated: false
      x-codegen-request-body-name: data
  '/users/{id}/replace':
    post:
      tags:
        - user
      description: Replace attributes for a model instance and persist it into the data source.
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: user.replaceById__post_users__replace
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/user'
          application/xml:
            schema:
              $ref: '#/components/schemas/user'
          text/xml:
            schema:
              $ref: '#/components/schemas/user'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
            application/xml:
              schema:
                $ref: '#/components/schemas/user'
            text/xml:
              schema:
                $ref: '#/components/schemas/user'
            application/javascript:
              schema:
                $ref: '#/components/schemas/user'
            text/javascript:
              schema:
                $ref: '#/components/schemas/user'
      deprecated: false
      x-codegen-request-body-name: data
  /users/findOne:
    get:
      tags:
        - user
      description: Find first instance of the model matched by filter from the data source.
      summary: Find first instance of the model matched by filter from the data source.
      operationId: user.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{"where":{"something":"value"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.'
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
            application/xml:
              schema:
                $ref: '#/components/schemas/user'
            text/xml:
              schema:
                $ref: '#/components/schemas/user'
            application/javascript:
              schema:
                $ref: '#/components/schemas/user'
            text/javascript:
              schema:
                $ref: '#/components/schemas/user'
      deprecated: false
  /users/update:
    post:
      tags:
        - user
      description: 'Update instances of the model matched by {{where}} from the data source.'
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: user.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/user'
          application/xml:
            schema:
              $ref: '#/components/schemas/user'
          text/xml:
            schema:
              $ref: '#/components/schemas/user'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: The number of instances updated
                    format: double
                description: Information related to the outcome of the operation
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: The number of instances updated
                    format: double
                description: Information related to the outcome of the operation
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: The number of instances updated
                    format: double
                description: Information related to the outcome of the operation
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: The number of instances updated
                    format: double
                description: Information related to the outcome of the operation
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: The number of instances updated
                    format: double
                description: Information related to the outcome of the operation
      deprecated: false
      x-codegen-request-body-name: data
  /users/count:
    get:
      tags:
        - user
      description: Count instances of the model matched by where from the data source.
      summary: Count instances of the model matched by where from the data source.
      operationId: user.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /users/change-stream:
    get:
      tags:
        - user
      description: Create a change stream.
      summary: Create a change stream.
      operationId: user.createChangeStream__get_users_change-stream
      parameters:
        - name: options
          in: query
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: string
                format: binary
            application/xml:
              schema:
                type: string
                format: binary
            text/xml:
              schema:
                type: string
                format: binary
            application/javascript:
              schema:
                type: string
                format: binary
            text/javascript:
              schema:
                type: string
                format: binary
      deprecated: false
    post:
      tags:
        - user
      description: Create a change stream.
      summary: Create a change stream.
      operationId: user.createChangeStream__post_users_change-stream
      requestBody:
        content:
          application/json:
            schema:
              properties:
                options:
                  type: string
                  format: JSON
          application/x-www-form-urlencoded:
            schema:
              properties:
                options:
                  type: string
                  format: JSON
          application/xml:
            schema:
              properties:
                options:
                  type: string
                  format: JSON
          text/xml:
            schema:
              properties:
                options:
                  type: string
                  format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: string
                format: binary
            application/xml:
              schema:
                type: string
                format: binary
            text/xml:
              schema:
                type: string
                format: binary
            application/javascript:
              schema:
                type: string
                format: binary
            text/javascript:
              schema:
                type: string
                format: binary
      deprecated: false
  /users/login:
    post:
      tags:
        - user
      description: Login a user with username/email and password.
      summary: Login a user with username/email and password.
      operationId: user.login
      parameters:
        - name: include
          in: query
          description: Related objects to include in the response. See the description of return value for more details.
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
          application/xml:
            schema:
              type: object
          text/xml:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                description: |
                  The response body contains properties of the AccessToken created on login.
                  Depending on the value of `include` parameter, the body may contain additional properties:

                    - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)
            application/xml:
              schema:
                type: object
                description: |
                  The response body contains properties of the AccessToken created on login.
                  Depending on the value of `include` parameter, the body may contain additional properties:

                    - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)
            text/xml:
              schema:
                type: object
                description: |
                  The response body contains properties of the AccessToken created on login.
                  Depending on the value of `include` parameter, the body may contain additional properties:

                    - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)
            application/javascript:
              schema:
                type: object
                description: |
                  The response body contains properties of the AccessToken created on login.
                  Depending on the value of `include` parameter, the body may contain additional properties:

                    - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)
            text/javascript:
              schema:
                type: object
                description: |
                  The response body contains properties of the AccessToken created on login.
                  Depending on the value of `include` parameter, the body may contain additional properties:

                    - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)
      deprecated: false
      x-codegen-request-body-name: credentials
  /users/logout:
    post:
      tags:
        - user
      description: Logout a user with access token.
      summary: Logout a user with access token.
      operationId: user.logout
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  '/users/{id}/verify':
    post:
      tags:
        - user
      description: Trigger user's identity verification with configured verifyOptions
      summary: Trigger user's identity verification with configured verifyOptions
      operationId: user.prototype.verify
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /users/confirm:
    get:
      tags:
        - user
      description: Confirm a user registration with identity verification token.
      summary: Confirm a user registration with identity verification token.
      operationId: user.confirm
      parameters:
        - name: uid
          in: query
          required: true
          schema:
            type: string
        - name: token
          in: query
          required: true
          schema:
            type: string
        - name: redirect
          in: query
          schema:
            type: string
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /users/reset:
    post:
      tags:
        - user
      description: Reset password for a user with email.
      summary: Reset password for a user with email.
      operationId: user.resetPassword
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
          application/xml:
            schema:
              type: object
          text/xml:
            schema:
              type: object
        required: true
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
      x-codegen-request-body-name: options
  /users/change-password:
    post:
      tags:
        - user
      description: Change a user's password.
      summary: Change a user's password.
      operationId: user.changePassword
      requestBody:
        content:
          application/json:
            schema:
              required:
                - newPassword
                - oldPassword
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              required:
                - newPassword
                - oldPassword
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
          application/xml:
            schema:
              required:
                - newPassword
                - oldPassword
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
          text/xml:
            schema:
              required:
                - newPassword
                - oldPassword
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
        required: true
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /users/reset-password:
    post:
      tags:
        - user
      description: Reset user's password via a password-reset token.
      summary: Reset user's password via a password-reset token.
      operationId: user.setPassword
      requestBody:
        content:
          application/json:
            schema:
              required:
                - newPassword
              properties:
                newPassword:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              required:
                - newPassword
              properties:
                newPassword:
                  type: string
          application/xml:
            schema:
              required:
                - newPassword
              properties:
                newPassword:
                  type: string
          text/xml:
            schema:
              required:
                - newPassword
              properties:
                newPassword:
                  type: string
        required: true
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /users/getByToken:
    get:
      tags:
        - user
      operationId: user.getByToken
      description: user.getByToken
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties: {}
            application/xml:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties: {}
            text/xml:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties: {}
            application/javascript:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties: {}
            text/javascript:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties: {}
      deprecated: false
  /users/validateMobile:
    post:
      tags:
        - user
      description: Validate mobile phone
      summary: Validate mobile phone
      operationId: user.validateMobile
      requestBody:
        content:
          application/json:
            schema:
              properties:
                mobile:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                mobile:
                  type: string
          application/xml:
            schema:
              properties:
                mobile:
                  type: string
          text/xml:
            schema:
              properties:
                mobile:
                  type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  isValid:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  isValid:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  isValid:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  isValid:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  isValid:
                    type: boolean
      deprecated: false
  /merchants:
    post:
      tags:
        - merchant
      description: Create a new instance of the model and persist it into the data source.
      summary: Create a new instance of the model and persist it into the data source.
      operationId: merchant.create
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new_merchant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/new_merchant'
          application/xml:
            schema:
              $ref: '#/components/schemas/new_merchant'
          text/xml:
            schema:
              $ref: '#/components/schemas/new_merchant'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant'
            application/xml:
              schema:
                $ref: '#/components/schemas/merchant'
            text/xml:
              schema:
                $ref: '#/components/schemas/merchant'
            application/javascript:
              schema:
                $ref: '#/components/schemas/merchant'
            text/javascript:
              schema:
                $ref: '#/components/schemas/merchant'
      deprecated: false
      x-codegen-request-body-name: data
  '/merchants/{id}':
    get:
      tags:
        - merchant
      description: 'Find a model instance by {{id}} from the data source.'
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: merchant.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant'
            application/xml:
              schema:
                $ref: '#/components/schemas/merchant'
            text/xml:
              schema:
                $ref: '#/components/schemas/merchant'
            application/javascript:
              schema:
                $ref: '#/components/schemas/merchant'
            text/javascript:
              schema:
                $ref: '#/components/schemas/merchant'
      deprecated: false
    delete:
      tags:
        - merchant
      description: 'Delete a model instance by {{id}} from the data source.'
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: merchant.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
  /merchants/login:
    post:
      tags:
        - merchant
      description: Login a user with username/email and password.
      summary: Login a user with username/email and password.
      operationId: merchant.login
      parameters:
        - name: include
          in: query
          description: Related objects to include in the response. See the description of return value for more details.
          schema:
            type: string
            format: JSON
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
          application/xml:
            schema:
              type: object
          text/xml:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                description: |
                  The response body contains properties of the AccessToken created on login.
                  Depending on the value of `include` parameter, the body may contain additional properties:

                    - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)
            application/xml:
              schema:
                type: object
                description: |
                  The response body contains properties of the AccessToken created on login.
                  Depending on the value of `include` parameter, the body may contain additional properties:

                    - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)
            text/xml:
              schema:
                type: object
                description: |
                  The response body contains properties of the AccessToken created on login.
                  Depending on the value of `include` parameter, the body may contain additional properties:

                    - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)
            application/javascript:
              schema:
                type: object
                description: |
                  The response body contains properties of the AccessToken created on login.
                  Depending on the value of `include` parameter, the body may contain additional properties:

                    - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)
            text/javascript:
              schema:
                type: object
                description: |
                  The response body contains properties of the AccessToken created on login.
                  Depending on the value of `include` parameter, the body may contain additional properties:

                    - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)
      deprecated: false
      x-codegen-request-body-name: credentials
  /merchants/logout:
    post:
      tags:
        - merchant
      description: Logout a user with access token.
      summary: Logout a user with access token.
      operationId: merchant.logout
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /merchants/confirm:
    get:
      tags:
        - merchant
      description: Confirm a user registration with identity verification token.
      summary: Confirm a user registration with identity verification token.
      operationId: merchant.confirm
      parameters:
        - name: uid
          in: query
          required: true
          schema:
            type: string
        - name: token
          in: query
          required: true
          schema:
            type: string
        - name: redirect
          in: query
          schema:
            type: string
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /merchants/v1/auth/accessToken:
    post:
      tags:
        - merchant
      description: Create Access Token
      summary: Create Access Token
      operationId: merchant.accessTokenV1
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
          application/xml:
            schema:
              type: object
          text/xml:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  expired:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  expired:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  expired:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  expired:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  expired:
                    type: string
      deprecated: false
      x-codegen-request-body-name: credentials
  /merchants/v1/paymentRequest:
    post:
      tags:
        - merchant
      description: Create Payment Request
      summary: Create Payment Request
      operationId: merchant.createPaymentV1
      requestBody:
        content:
          application/json:
            schema:
              properties:
                orderID:
                  type: string
                type:
                  type: string
                amount:
                  type: string
                currency:
                  type: string
                storeID:
                  type: string
                merchantCustomerID:
                  type: string
                orderItems:
                  type: string
                  format: JSON
                termsAccepted:
                  type: boolean
                privacyAccepted:
                  type: boolean
                merchantLocalIP:
                  type: string
                successURL:
                  type: string
                failureURL:
                  type: string
                merchantCustomerProfile:
                  type: string
                  format: JSON
          application/x-www-form-urlencoded:
            schema:
              properties:
                orderID:
                  type: string
                type:
                  type: string
                amount:
                  type: string
                currency:
                  type: string
                storeID:
                  type: string
                merchantCustomerID:
                  type: string
                orderItems:
                  type: string
                  format: JSON
                termsAccepted:
                  type: boolean
                privacyAccepted:
                  type: boolean
                merchantLocalIP:
                  type: string
                successURL:
                  type: string
                failureURL:
                  type: string
                merchantCustomerProfile:
                  type: string
                  format: JSON
          application/xml:
            schema:
              properties:
                orderID:
                  type: string
                type:
                  type: string
                amount:
                  type: string
                currency:
                  type: string
                storeID:
                  type: string
                merchantCustomerID:
                  type: string
                orderItems:
                  type: string
                  format: JSON
                termsAccepted:
                  type: boolean
                privacyAccepted:
                  type: boolean
                merchantLocalIP:
                  type: string
                successURL:
                  type: string
                failureURL:
                  type: string
                merchantCustomerProfile:
                  type: string
                  format: JSON
          text/xml:
            schema:
              properties:
                orderID:
                  type: string
                type:
                  type: string
                amount:
                  type: string
                currency:
                  type: string
                storeID:
                  type: string
                merchantCustomerID:
                  type: string
                orderItems:
                  type: string
                  format: JSON
                termsAccepted:
                  type: boolean
                privacyAccepted:
                  type: boolean
                merchantLocalIP:
                  type: string
                successURL:
                  type: string
                failureURL:
                  type: string
                merchantCustomerProfile:
                  type: string
                  format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  expirationTime:
                    type: string
                  status:
                    type: string
                  merchantCustomerID:
                    type: string
                  orderItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
                  successURL:
                    type: string
                  failureURL:
                    type: string
                  redirectURL:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  expirationTime:
                    type: string
                  status:
                    type: string
                  merchantCustomerID:
                    type: string
                  orderItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
                  successURL:
                    type: string
                  failureURL:
                    type: string
                  redirectURL:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  expirationTime:
                    type: string
                  status:
                    type: string
                  merchantCustomerID:
                    type: string
                  orderItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
                  successURL:
                    type: string
                  failureURL:
                    type: string
                  redirectURL:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  expirationTime:
                    type: string
                  status:
                    type: string
                  merchantCustomerID:
                    type: string
                  orderItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
                  successURL:
                    type: string
                  failureURL:
                    type: string
                  redirectURL:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  expirationTime:
                    type: string
                  status:
                    type: string
                  merchantCustomerID:
                    type: string
                  orderItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
                  successURL:
                    type: string
                  failureURL:
                    type: string
                  redirectURL:
                    type: string
      deprecated: false
  '/merchants/v1/paymentRequest/{id}':
    get:
      tags:
        - merchant
      description: Get Payment details
      summary: Get Payment details
      operationId: merchant.getPaymentV1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  expirationTime:
                    type: string
                  status:
                    type: string
                  merchantCustomerID:
                    type: string
                  orderItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
                  successURL:
                    type: string
                  failureURL:
                    type: string
                  redirectURL:
                    type: string
                  confirmationNumber:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  expirationTime:
                    type: string
                  status:
                    type: string
                  merchantCustomerID:
                    type: string
                  orderItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
                  successURL:
                    type: string
                  failureURL:
                    type: string
                  redirectURL:
                    type: string
                  confirmationNumber:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  expirationTime:
                    type: string
                  status:
                    type: string
                  merchantCustomerID:
                    type: string
                  orderItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
                  successURL:
                    type: string
                  failureURL:
                    type: string
                  redirectURL:
                    type: string
                  confirmationNumber:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  expirationTime:
                    type: string
                  status:
                    type: string
                  merchantCustomerID:
                    type: string
                  orderItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
                  successURL:
                    type: string
                  failureURL:
                    type: string
                  redirectURL:
                    type: string
                  confirmationNumber:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  expirationTime:
                    type: string
                  status:
                    type: string
                  merchantCustomerID:
                    type: string
                  orderItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
                  successURL:
                    type: string
                  failureURL:
                    type: string
                  redirectURL:
                    type: string
                  confirmationNumber:
                    type: string
      deprecated: false
  '/merchants/v1/paymentRequest/{id}/capture':
    post:
      tags:
        - merchant
      description: Capture Payment Request
      summary: Capture Payment Request
      operationId: merchant.capturePaymentV1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                amount:
                  type: string
                amountToCapture:
                  type: string
                invoice:
                  type: string
                currency:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                amount:
                  type: string
                amountToCapture:
                  type: string
                invoice:
                  type: string
                currency:
                  type: string
          application/xml:
            schema:
              properties:
                amount:
                  type: string
                amountToCapture:
                  type: string
                invoice:
                  type: string
                currency:
                  type: string
          text/xml:
            schema:
              properties:
                amount:
                  type: string
                amountToCapture:
                  type: string
                invoice:
                  type: string
                currency:
                  type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  amountToCapture:
                    type: string
                  invoice:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  expirationTime:
                    type: string
                  status:
                    type: string
                  merchantCustomerID:
                    type: string
                  orderItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
                  successURL:
                    type: string
                  failureURL:
                    type: string
                  redirectURL:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  amountToCapture:
                    type: string
                  invoice:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  expirationTime:
                    type: string
                  status:
                    type: string
                  merchantCustomerID:
                    type: string
                  orderItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
                  successURL:
                    type: string
                  failureURL:
                    type: string
                  redirectURL:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  amountToCapture:
                    type: string
                  invoice:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  expirationTime:
                    type: string
                  status:
                    type: string
                  merchantCustomerID:
                    type: string
                  orderItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
                  successURL:
                    type: string
                  failureURL:
                    type: string
                  redirectURL:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  amountToCapture:
                    type: string
                  invoice:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  expirationTime:
                    type: string
                  status:
                    type: string
                  merchantCustomerID:
                    type: string
                  orderItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
                  successURL:
                    type: string
                  failureURL:
                    type: string
                  redirectURL:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  amountToCapture:
                    type: string
                  invoice:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  expirationTime:
                    type: string
                  status:
                    type: string
                  merchantCustomerID:
                    type: string
                  orderItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
                  successURL:
                    type: string
                  failureURL:
                    type: string
                  redirectURL:
                    type: string
      deprecated: false
  '/merchants/v1/paymentRequest/{id}/cancel':
    post:
      tags:
        - merchant
      description: Cancel Payment Request
      summary: Cancel Payment Request
      operationId: merchant.cancelPaymentV1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  expirationTime:
                    type: string
                  status:
                    type: string
                  merchantCustomerID:
                    type: string
                  orderItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
                  successURL:
                    type: string
                  failureURL:
                    type: string
                  redirectURL:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  expirationTime:
                    type: string
                  status:
                    type: string
                  merchantCustomerID:
                    type: string
                  orderItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
                  successURL:
                    type: string
                  failureURL:
                    type: string
                  redirectURL:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  expirationTime:
                    type: string
                  status:
                    type: string
                  merchantCustomerID:
                    type: string
                  orderItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
                  successURL:
                    type: string
                  failureURL:
                    type: string
                  redirectURL:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  expirationTime:
                    type: string
                  status:
                    type: string
                  merchantCustomerID:
                    type: string
                  orderItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
                  successURL:
                    type: string
                  failureURL:
                    type: string
                  redirectURL:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  expirationTime:
                    type: string
                  status:
                    type: string
                  merchantCustomerID:
                    type: string
                  orderItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
                  successURL:
                    type: string
                  failureURL:
                    type: string
                  redirectURL:
                    type: string
      deprecated: false
  '/merchants/v1/paymentRequest/{id}/refund':
    post:
      tags:
        - merchant
      description: Create Refund
      summary: Create Refund
      operationId: merchant.createRefundV1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                orderID:
                  type: string
                amount:
                  type: string
                currency:
                  type: string
                merchantRefundID:
                  type: string
                refundItems:
                  type: string
                  format: JSON
          application/x-www-form-urlencoded:
            schema:
              properties:
                orderID:
                  type: string
                amount:
                  type: string
                currency:
                  type: string
                merchantRefundID:
                  type: string
                refundItems:
                  type: string
                  format: JSON
          application/xml:
            schema:
              properties:
                orderID:
                  type: string
                amount:
                  type: string
                currency:
                  type: string
                merchantRefundID:
                  type: string
                refundItems:
                  type: string
                  format: JSON
          text/xml:
            schema:
              properties:
                orderID:
                  type: string
                amount:
                  type: string
                currency:
                  type: string
                merchantRefundID:
                  type: string
                refundItems:
                  type: string
                  format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  status:
                    type: string
                  merchantRefundID:
                    type: string
                  refundItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  status:
                    type: string
                  merchantRefundID:
                    type: string
                  refundItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  status:
                    type: string
                  merchantRefundID:
                    type: string
                  refundItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  status:
                    type: string
                  merchantRefundID:
                    type: string
                  refundItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  status:
                    type: string
                  merchantRefundID:
                    type: string
                  refundItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
      deprecated: false
  '/merchants/v1/refundPayment/{id}':
    get:
      tags:
        - merchant
      description: Get Refund details
      summary: Get Refund details
      operationId: merchant.getRefundV1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  status:
                    type: string
                  merchantRefundID:
                    type: string
                  refundItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  status:
                    type: string
                  merchantRefundID:
                    type: string
                  refundItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  status:
                    type: string
                  merchantRefundID:
                    type: string
                  refundItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  status:
                    type: string
                  merchantRefundID:
                    type: string
                  refundItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  amount:
                    type: string
                  currency:
                    type: string
                  orderID:
                    type: string
                  status:
                    type: string
                  merchantRefundID:
                    type: string
                  refundItems:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  modified:
                    type: string
      deprecated: false
  /merchants/v1/paymentRequest/configuration:
    get:
      tags:
        - merchant
      description: Get payment request configuration
      summary: Get payment request configuration
      operationId: merchant.getPaymentConfigurationV1
      parameters:
        - name: mobile
          in: query
          schema:
            type: string
        - name: merchantCustomerID
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  minCreditAmount:
                    type: number
                    format: double
                  maxCreditAmount:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  minCreditAmount:
                    type: number
                    format: double
                  maxCreditAmount:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  minCreditAmount:
                    type: number
                    format: double
                  maxCreditAmount:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  minCreditAmount:
                    type: number
                    format: double
                  maxCreditAmount:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  minCreditAmount:
                    type: number
                    format: double
                  maxCreditAmount:
                    type: number
                    format: double
      deprecated: false
  /merchants/v1/paymentRequest/paymentPlan:
    get:
      tags:
        - merchant
      description: Get payment plan
      summary: Get payment plan
      operationId: merchant.getPaymentPlanV1
      parameters:
        - name: amount
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  paymentsNumber:
                    type: number
                    format: double
                  paymentPlan:
                    type: array
                    items:
                      type: object
                      properties: {}
            application/xml:
              schema:
                type: object
                properties:
                  paymentsNumber:
                    type: number
                    format: double
                  paymentPlan:
                    type: array
                    items:
                      type: object
                      properties: {}
            text/xml:
              schema:
                type: object
                properties:
                  paymentsNumber:
                    type: number
                    format: double
                  paymentPlan:
                    type: array
                    items:
                      type: object
                      properties: {}
            application/javascript:
              schema:
                type: object
                properties:
                  paymentsNumber:
                    type: number
                    format: double
                  paymentPlan:
                    type: array
                    items:
                      type: object
                      properties: {}
            text/javascript:
              schema:
                type: object
                properties:
                  paymentsNumber:
                    type: number
                    format: double
                  paymentPlan:
                    type: array
                    items:
                      type: object
                      properties: {}
      deprecated: false
  /merchants/v1/configuration:
    get:
      tags:
        - merchant
      description: Get merchant configuration
      summary: Get merchant configuration
      operationId: merchant.getConfigurationV1
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  minCreditAmount:
                    type: number
                    format: double
                  maxCreditAmount:
                    type: number
                    format: double
                  minPayNowAmount:
                    type: number
                    format: double
                  maxPayNowAmount:
                    type: number
                    format: double
                  paymentRequestTTL:
                    type: number
                    format: double
                  paymentRequestInterval:
                    type: number
                    format: double
                  language:
                    type: string
                  payNowSupport:
                    type: boolean
                  iFrameUI:
                    type: boolean
                  merchantName:
                    type: string
                  stores:
                    type: array
                    items:
                      type: object
                      properties: {}
                  merchantId:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  minCreditAmount:
                    type: number
                    format: double
                  maxCreditAmount:
                    type: number
                    format: double
                  minPayNowAmount:
                    type: number
                    format: double
                  maxPayNowAmount:
                    type: number
                    format: double
                  paymentRequestTTL:
                    type: number
                    format: double
                  paymentRequestInterval:
                    type: number
                    format: double
                  language:
                    type: string
                  payNowSupport:
                    type: boolean
                  iFrameUI:
                    type: boolean
                  merchantName:
                    type: string
                  stores:
                    type: array
                    items:
                      type: object
                      properties: {}
                  merchantId:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  minCreditAmount:
                    type: number
                    format: double
                  maxCreditAmount:
                    type: number
                    format: double
                  minPayNowAmount:
                    type: number
                    format: double
                  maxPayNowAmount:
                    type: number
                    format: double
                  paymentRequestTTL:
                    type: number
                    format: double
                  paymentRequestInterval:
                    type: number
                    format: double
                  language:
                    type: string
                  payNowSupport:
                    type: boolean
                  iFrameUI:
                    type: boolean
                  merchantName:
                    type: string
                  stores:
                    type: array
                    items:
                      type: object
                      properties: {}
                  merchantId:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  minCreditAmount:
                    type: number
                    format: double
                  maxCreditAmount:
                    type: number
                    format: double
                  minPayNowAmount:
                    type: number
                    format: double
                  maxPayNowAmount:
                    type: number
                    format: double
                  paymentRequestTTL:
                    type: number
                    format: double
                  paymentRequestInterval:
                    type: number
                    format: double
                  language:
                    type: string
                  payNowSupport:
                    type: boolean
                  iFrameUI:
                    type: boolean
                  merchantName:
                    type: string
                  stores:
                    type: array
                    items:
                      type: object
                      properties: {}
                  merchantId:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  minCreditAmount:
                    type: number
                    format: double
                  maxCreditAmount:
                    type: number
                    format: double
                  minPayNowAmount:
                    type: number
                    format: double
                  maxPayNowAmount:
                    type: number
                    format: double
                  paymentRequestTTL:
                    type: number
                    format: double
                  paymentRequestInterval:
                    type: number
                    format: double
                  language:
                    type: string
                  payNowSupport:
                    type: boolean
                  iFrameUI:
                    type: boolean
                  merchantName:
                    type: string
                  stores:
                    type: array
                    items:
                      type: object
                      properties: {}
                  merchantId:
                    type: string
      deprecated: false
  '/merchants/v1/paymentRequest/{id}/resendSMS':
    get:
      tags:
        - merchant
      description: Resend SMS
      summary: Resend SMS
      operationId: merchant.resendSMSV1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
      deprecated: false
  /merchants/v1/paymentRequest/history:
    get:
      tags:
        - merchant
      description: Get PaymentRequests history
      summary: Get PaymentRequests history
      operationId: merchant.getHistoryV1
      parameters:
        - name: mobile
          in: query
          schema:
            type: string
        - name: from
          in: query
          schema:
            type: string
        - name: to
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      type: object
                      properties: {}
            application/xml:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      type: object
                      properties: {}
            text/xml:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      type: object
                      properties: {}
            application/javascript:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      type: object
                      properties: {}
            text/javascript:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      type: object
                      properties: {}
      deprecated: false
  '/stores/{id}/merchant':
    get:
      tags:
        - store
      description: Fetches belongsTo relation merchant.
      summary: Fetches belongsTo relation merchant.
      operationId: store.prototype.__get__merchant
      parameters:
        - name: id
          in: path
          description: store id
          required: true
          schema:
            type: string
            format: JSON
        - name: refresh
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant'
            application/xml:
              schema:
                $ref: '#/components/schemas/merchant'
            text/xml:
              schema:
                $ref: '#/components/schemas/merchant'
            application/javascript:
              schema:
                $ref: '#/components/schemas/merchant'
            text/javascript:
              schema:
                $ref: '#/components/schemas/merchant'
      deprecated: false
  /stores:
    get:
      tags:
        - store
      description: Find all instances of the model matched by filter from the data source.
      summary: Find all instances of the model matched by filter from the data source.
      operationId: store.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{"where":{"something":"value"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.'
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/store'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/store'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/store'
            application/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/store'
            text/javascript:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/store'
      deprecated: false
    put:
      tags:
        - store
      description: Replace an existing model instance or insert a new one into the data source.
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: store.replaceOrCreate__put_stores
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/store'
          application/xml:
            schema:
              $ref: '#/components/schemas/store'
          text/xml:
            schema:
              $ref: '#/components/schemas/store'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store'
            application/xml:
              schema:
                $ref: '#/components/schemas/store'
            text/xml:
              schema:
                $ref: '#/components/schemas/store'
            application/javascript:
              schema:
                $ref: '#/components/schemas/store'
            text/javascript:
              schema:
                $ref: '#/components/schemas/store'
      deprecated: false
      x-codegen-request-body-name: data
    post:
      tags:
        - store
      description: Create a new instance of the model and persist it into the data source.
      summary: Create a new instance of the model and persist it into the data source.
      operationId: store.create
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new_store'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/new_store'
          application/xml:
            schema:
              $ref: '#/components/schemas/new_store'
          text/xml:
            schema:
              $ref: '#/components/schemas/new_store'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store'
            application/xml:
              schema:
                $ref: '#/components/schemas/store'
            text/xml:
              schema:
                $ref: '#/components/schemas/store'
            application/javascript:
              schema:
                $ref: '#/components/schemas/store'
            text/javascript:
              schema:
                $ref: '#/components/schemas/store'
      deprecated: false
      x-codegen-request-body-name: data
    patch:
      tags:
        - store
      description: Patch an existing model instance or insert a new one into the data source.
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: store.patchOrCreate
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/store'
          application/xml:
            schema:
              $ref: '#/components/schemas/store'
          text/xml:
            schema:
              $ref: '#/components/schemas/store'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store'
            application/xml:
              schema:
                $ref: '#/components/schemas/store'
            text/xml:
              schema:
                $ref: '#/components/schemas/store'
            application/javascript:
              schema:
                $ref: '#/components/schemas/store'
            text/javascript:
              schema:
                $ref: '#/components/schemas/store'
      deprecated: false
      x-codegen-request-body-name: data
  /stores/replaceOrCreate:
    post:
      tags:
        - store
      description: Replace an existing model instance or insert a new one into the data source.
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: store.replaceOrCreate__post_stores_replaceOrCreate
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/store'
          application/xml:
            schema:
              $ref: '#/components/schemas/store'
          text/xml:
            schema:
              $ref: '#/components/schemas/store'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store'
            application/xml:
              schema:
                $ref: '#/components/schemas/store'
            text/xml:
              schema:
                $ref: '#/components/schemas/store'
            application/javascript:
              schema:
                $ref: '#/components/schemas/store'
            text/javascript:
              schema:
                $ref: '#/components/schemas/store'
      deprecated: false
      x-codegen-request-body-name: data
  /stores/upsertWithWhere:
    post:
      tags:
        - store
      description: Update an existing model instance or insert a new one into the data source based on the where criteria.
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: store.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/store'
          application/xml:
            schema:
              $ref: '#/components/schemas/store'
          text/xml:
            schema:
              $ref: '#/components/schemas/store'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store'
            application/xml:
              schema:
                $ref: '#/components/schemas/store'
            text/xml:
              schema:
                $ref: '#/components/schemas/store'
            application/javascript:
              schema:
                $ref: '#/components/schemas/store'
            text/javascript:
              schema:
                $ref: '#/components/schemas/store'
      deprecated: false
      x-codegen-request-body-name: data
  '/stores/{id}/exists':
    get:
      tags:
        - store
      description: Check whether a model instance exists in the data source.
      summary: Check whether a model instance exists in the data source.
      operationId: store.exists__get_stores__exists
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
      deprecated: false
  '/stores/{id}':
    get:
      tags:
        - store
      description: 'Find a model instance by {{id}} from the data source.'
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: store.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store'
            application/xml:
              schema:
                $ref: '#/components/schemas/store'
            text/xml:
              schema:
                $ref: '#/components/schemas/store'
            application/javascript:
              schema:
                $ref: '#/components/schemas/store'
            text/javascript:
              schema:
                $ref: '#/components/schemas/store'
      deprecated: false
    put:
      tags:
        - store
      description: Replace attributes for a model instance and persist it into the data source.
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: store.replaceById__put_stores_
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/store'
          application/xml:
            schema:
              $ref: '#/components/schemas/store'
          text/xml:
            schema:
              $ref: '#/components/schemas/store'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store'
            application/xml:
              schema:
                $ref: '#/components/schemas/store'
            text/xml:
              schema:
                $ref: '#/components/schemas/store'
            application/javascript:
              schema:
                $ref: '#/components/schemas/store'
            text/javascript:
              schema:
                $ref: '#/components/schemas/store'
      deprecated: false
      x-codegen-request-body-name: data
    delete:
      tags:
        - store
      description: 'Delete a model instance by {{id}} from the data source.'
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: store.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/javascript:
              schema:
                type: object
            text/javascript:
              schema:
                type: object
      deprecated: false
    head:
      tags:
        - store
      description: Check whether a model instance exists in the data source.
      summary: Check whether a model instance exists in the data source.
      operationId: store.exists__head_stores_
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
      deprecated: false
    patch:
      tags:
        - store
      description: Patch attributes for a model instance and persist it into the data source.
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: store.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: store id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/store'
          application/xml:
            schema:
              $ref: '#/components/schemas/store'
          text/xml:
            schema:
              $ref: '#/components/schemas/store'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store'
            application/xml:
              schema:
                $ref: '#/components/schemas/store'
            text/xml:
              schema:
                $ref: '#/components/schemas/store'
            application/javascript:
              schema:
                $ref: '#/components/schemas/store'
            text/javascript:
              schema:
                $ref: '#/components/schemas/store'
      deprecated: false
      x-codegen-request-body-name: data
  '/stores/{id}/replace':
    post:
      tags:
        - store
      description: Replace attributes for a model instance and persist it into the data source.
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: store.replaceById__post_stores__replace
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
      requestBody:
        description: Model instance data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/store'
          application/xml:
            schema:
              $ref: '#/components/schemas/store'
          text/xml:
            schema:
              $ref: '#/components/schemas/store'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store'
            application/xml:
              schema:
                $ref: '#/components/schemas/store'
            text/xml:
              schema:
                $ref: '#/components/schemas/store'
            application/javascript:
              schema:
                $ref: '#/components/schemas/store'
            text/javascript:
              schema:
                $ref: '#/components/schemas/store'
      deprecated: false
      x-codegen-request-body-name: data
  /stores/findOne:
    get:
      tags:
        - store
      description: Find first instance of the model matched by filter from the data source.
      summary: Find first instance of the model matched by filter from the data source.
      operationId: store.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{"where":{"something":"value"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.'
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store'
            application/xml:
              schema:
                $ref: '#/components/schemas/store'
            text/xml:
              schema:
                $ref: '#/components/schemas/store'
            application/javascript:
              schema:
                $ref: '#/components/schemas/store'
            text/javascript:
              schema:
                $ref: '#/components/schemas/store'
      deprecated: false
  /stores/update:
    post:
      tags:
        - store
      description: 'Update instances of the model matched by {{where}} from the data source.'
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: store.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          schema:
            type: string
            format: JSON
      requestBody:
        description: An object of model property name/value pairs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/store'
          application/xml:
            schema:
              $ref: '#/components/schemas/store'
          text/xml:
            schema:
              $ref: '#/components/schemas/store'
        required: false
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: The number of instances updated
                    format: double
                description: Information related to the outcome of the operation
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: The number of instances updated
                    format: double
                description: Information related to the outcome of the operation
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: The number of instances updated
                    format: double
                description: Information related to the outcome of the operation
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: The number of instances updated
                    format: double
                description: Information related to the outcome of the operation
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    description: The number of instances updated
                    format: double
                description: Information related to the outcome of the operation
      deprecated: false
      x-codegen-request-body-name: data
  /stores/count:
    get:
      tags:
        - store
      description: Count instances of the model matched by where from the data source.
      summary: Count instances of the model matched by where from the data source.
      operationId: store.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    format: double
      deprecated: false
  /stores/change-stream:
    get:
      tags:
        - store
      description: Create a change stream.
      summary: Create a change stream.
      operationId: store.createChangeStream__get_stores_change-stream
      parameters:
        - name: options
          in: query
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: string
                format: binary
            application/xml:
              schema:
                type: string
                format: binary
            text/xml:
              schema:
                type: string
                format: binary
            application/javascript:
              schema:
                type: string
                format: binary
            text/javascript:
              schema:
                type: string
                format: binary
      deprecated: false
    post:
      tags:
        - store
      description: Create a change stream.
      summary: Create a change stream.
      operationId: store.createChangeStream__post_stores_change-stream
      requestBody:
        content:
          application/json:
            schema:
              properties:
                options:
                  type: string
                  format: JSON
          application/x-www-form-urlencoded:
            schema:
              properties:
                options:
                  type: string
                  format: JSON
          application/xml:
            schema:
              properties:
                options:
                  type: string
                  format: JSON
          text/xml:
            schema:
              properties:
                options:
                  type: string
                  format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: string
                format: binary
            application/xml:
              schema:
                type: string
                format: binary
            text/xml:
              schema:
                type: string
                format: binary
            application/javascript:
              schema:
                type: string
                format: binary
            text/javascript:
              schema:
                type: string
                format: binary
      deprecated: false
  /appVersions/checkAppVersionRelevance:
    post:
      tags:
        - appVersion
      description: Check relevance of the application
      summary: Check relevance of the application
      operationId: appVersion.checkAppVersionRelevance
      requestBody:
        content:
          application/json:
            schema:
              required:
                - version
              properties:
                version:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              required:
                - version
              properties:
                version:
                  type: string
          application/xml:
            schema:
              required:
                - version
              properties:
                version:
                  type: string
          text/xml:
            schema:
              required:
                - version
              properties:
                version:
                  type: string
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
      deprecated: false
  /consumers/savePin:
    patch:
      tags:
        - consumer
      description: Save consumers pincode
      summary: Save consumers pincode
      operationId: consumer.savePin
      requestBody:
        content:
          application/json:
            schema:
              required:
                - pin
              properties:
                pin:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              required:
                - pin
              properties:
                pin:
                  type: string
          application/xml:
            schema:
              required:
                - pin
              properties:
                pin:
                  type: string
          text/xml:
            schema:
              required:
                - pin
              properties:
                pin:
                  type: string
        required: true
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /consumers/saveInformation:
    patch:
      tags:
        - consumer
      description: Save consumers information
      summary: Save consumers information
      operationId: consumer.saveInformation
      requestBody:
        content:
          application/json:
            schema:
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                address:
                  type: string
                fiscalCode:
                  type: string
                city:
                  type: string
                province:
                  type: string
                country:
                  type: string
                zipcode:
                  type: string
                idType:
                  type: string
                idNumber:
                  type: string
                issuingDate:
                  type: string
                expiryDate:
                  type: string
                issuingPlace:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                address:
                  type: string
                fiscalCode:
                  type: string
                city:
                  type: string
                province:
                  type: string
                country:
                  type: string
                zipcode:
                  type: string
                idType:
                  type: string
                idNumber:
                  type: string
                issuingDate:
                  type: string
                expiryDate:
                  type: string
                issuingPlace:
                  type: string
          application/xml:
            schema:
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                address:
                  type: string
                fiscalCode:
                  type: string
                city:
                  type: string
                province:
                  type: string
                country:
                  type: string
                zipcode:
                  type: string
                idType:
                  type: string
                idNumber:
                  type: string
                issuingDate:
                  type: string
                expiryDate:
                  type: string
                issuingPlace:
                  type: string
          text/xml:
            schema:
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                address:
                  type: string
                fiscalCode:
                  type: string
                city:
                  type: string
                province:
                  type: string
                country:
                  type: string
                zipcode:
                  type: string
                idType:
                  type: string
                idNumber:
                  type: string
                issuingDate:
                  type: string
                expiryDate:
                  type: string
                issuingPlace:
                  type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  firstName:
                    type: string
                  lastName:
                    type: string
                  email:
                    type: string
                  address:
                    type: string
                  fiscalCode:
                    type: string
                  city:
                    type: string
                  province:
                    type: string
                  country:
                    type: string
                  zipcode:
                    type: string
                  idType:
                    type: string
                  idNumber:
                    type: string
                  issuingDate:
                    type: string
                  expiryDate:
                    type: string
                  issuingPlace:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  firstName:
                    type: string
                  lastName:
                    type: string
                  email:
                    type: string
                  address:
                    type: string
                  fiscalCode:
                    type: string
                  city:
                    type: string
                  province:
                    type: string
                  country:
                    type: string
                  zipcode:
                    type: string
                  idType:
                    type: string
                  idNumber:
                    type: string
                  issuingDate:
                    type: string
                  expiryDate:
                    type: string
                  issuingPlace:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  firstName:
                    type: string
                  lastName:
                    type: string
                  email:
                    type: string
                  address:
                    type: string
                  fiscalCode:
                    type: string
                  city:
                    type: string
                  province:
                    type: string
                  country:
                    type: string
                  zipcode:
                    type: string
                  idType:
                    type: string
                  idNumber:
                    type: string
                  issuingDate:
                    type: string
                  expiryDate:
                    type: string
                  issuingPlace:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  firstName:
                    type: string
                  lastName:
                    type: string
                  email:
                    type: string
                  address:
                    type: string
                  fiscalCode:
                    type: string
                  city:
                    type: string
                  province:
                    type: string
                  country:
                    type: string
                  zipcode:
                    type: string
                  idType:
                    type: string
                  idNumber:
                    type: string
                  issuingDate:
                    type: string
                  expiryDate:
                    type: string
                  issuingPlace:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  firstName:
                    type: string
                  lastName:
                    type: string
                  email:
                    type: string
                  address:
                    type: string
                  fiscalCode:
                    type: string
                  city:
                    type: string
                  province:
                    type: string
                  country:
                    type: string
                  zipcode:
                    type: string
                  idType:
                    type: string
                  idNumber:
                    type: string
                  issuingDate:
                    type: string
                  expiryDate:
                    type: string
                  issuingPlace:
                    type: string
      deprecated: false
  /consumers/getInformation:
    get:
      tags:
        - consumer
      description: Get consumer's information
      summary: Get consumer's information
      operationId: consumer.getInformation
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  mobile:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
                  email:
                    type: string
                  address:
                    type: string
                  fiscalCode:
                    type: string
                  city:
                    type: string
                  province:
                    type: string
                  country:
                    type: string
                  zipcode:
                    type: string
                  idType:
                    type: string
                  idNumber:
                    type: string
                  issuingDate:
                    type: string
                  expiryDate:
                    type: string
                  issuingPlace:
                    type: string
                  privacyFlag:
                    type: boolean
                  hasPin:
                    type: boolean
                  promotionEmailsFlag:
                    type: boolean
                  selectedLanguage:
                    type: string
                  marketingMaterialsFlag:
                    type: boolean
                  benefitForfeitureFlag:
                    type: boolean
                  creationSource:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  mobile:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
                  email:
                    type: string
                  address:
                    type: string
                  fiscalCode:
                    type: string
                  city:
                    type: string
                  province:
                    type: string
                  country:
                    type: string
                  zipcode:
                    type: string
                  idType:
                    type: string
                  idNumber:
                    type: string
                  issuingDate:
                    type: string
                  expiryDate:
                    type: string
                  issuingPlace:
                    type: string
                  privacyFlag:
                    type: boolean
                  hasPin:
                    type: boolean
                  promotionEmailsFlag:
                    type: boolean
                  selectedLanguage:
                    type: string
                  marketingMaterialsFlag:
                    type: boolean
                  benefitForfeitureFlag:
                    type: boolean
                  creationSource:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  mobile:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
                  email:
                    type: string
                  address:
                    type: string
                  fiscalCode:
                    type: string
                  city:
                    type: string
                  province:
                    type: string
                  country:
                    type: string
                  zipcode:
                    type: string
                  idType:
                    type: string
                  idNumber:
                    type: string
                  issuingDate:
                    type: string
                  expiryDate:
                    type: string
                  issuingPlace:
                    type: string
                  privacyFlag:
                    type: boolean
                  hasPin:
                    type: boolean
                  promotionEmailsFlag:
                    type: boolean
                  selectedLanguage:
                    type: string
                  marketingMaterialsFlag:
                    type: boolean
                  benefitForfeitureFlag:
                    type: boolean
                  creationSource:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  mobile:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
                  email:
                    type: string
                  address:
                    type: string
                  fiscalCode:
                    type: string
                  city:
                    type: string
                  province:
                    type: string
                  country:
                    type: string
                  zipcode:
                    type: string
                  idType:
                    type: string
                  idNumber:
                    type: string
                  issuingDate:
                    type: string
                  expiryDate:
                    type: string
                  issuingPlace:
                    type: string
                  privacyFlag:
                    type: boolean
                  hasPin:
                    type: boolean
                  promotionEmailsFlag:
                    type: boolean
                  selectedLanguage:
                    type: string
                  marketingMaterialsFlag:
                    type: boolean
                  benefitForfeitureFlag:
                    type: boolean
                  creationSource:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  mobile:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
                  email:
                    type: string
                  address:
                    type: string
                  fiscalCode:
                    type: string
                  city:
                    type: string
                  province:
                    type: string
                  country:
                    type: string
                  zipcode:
                    type: string
                  idType:
                    type: string
                  idNumber:
                    type: string
                  issuingDate:
                    type: string
                  expiryDate:
                    type: string
                  issuingPlace:
                    type: string
                  privacyFlag:
                    type: boolean
                  hasPin:
                    type: boolean
                  promotionEmailsFlag:
                    type: boolean
                  selectedLanguage:
                    type: string
                  marketingMaterialsFlag:
                    type: boolean
                  benefitForfeitureFlag:
                    type: boolean
                  creationSource:
                    type: string
      deprecated: false
  /consumers/getProvinces:
    get:
      tags:
        - consumer
      description: Get provinces
      summary: Get provinces
      operationId: consumer.getProvinces
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  provinces:
                    type: array
                    items:
                      type: object
                      properties: {}
            application/xml:
              schema:
                type: object
                properties:
                  provinces:
                    type: array
                    items:
                      type: object
                      properties: {}
            text/xml:
              schema:
                type: object
                properties:
                  provinces:
                    type: array
                    items:
                      type: object
                      properties: {}
            application/javascript:
              schema:
                type: object
                properties:
                  provinces:
                    type: array
                    items:
                      type: object
                      properties: {}
            text/javascript:
              schema:
                type: object
                properties:
                  provinces:
                    type: array
                    items:
                      type: object
                      properties: {}
      deprecated: false
  /consumers/getCities:
    get:
      tags:
        - consumer
      description: Get cities
      summary: Get cities
      operationId: consumer.getCities
      parameters:
        - name: province
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  cities:
                    type: array
                    items:
                      type: object
                      properties: {}
            application/xml:
              schema:
                type: object
                properties:
                  cities:
                    type: array
                    items:
                      type: object
                      properties: {}
            text/xml:
              schema:
                type: object
                properties:
                  cities:
                    type: array
                    items:
                      type: object
                      properties: {}
            application/javascript:
              schema:
                type: object
                properties:
                  cities:
                    type: array
                    items:
                      type: object
                      properties: {}
            text/javascript:
              schema:
                type: object
                properties:
                  cities:
                    type: array
                    items:
                      type: object
                      properties: {}
      deprecated: false
  /consumers/getZipCodes:
    get:
      tags:
        - consumer
      description: Get Zip codes
      summary: Get Zip codes
      operationId: consumer.getZipCodes
      parameters:
        - name: city
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  zipCodes:
                    type: array
                    items:
                      type: object
                      properties: {}
            application/xml:
              schema:
                type: object
                properties:
                  zipCodes:
                    type: array
                    items:
                      type: object
                      properties: {}
            text/xml:
              schema:
                type: object
                properties:
                  zipCodes:
                    type: array
                    items:
                      type: object
                      properties: {}
            application/javascript:
              schema:
                type: object
                properties:
                  zipCodes:
                    type: array
                    items:
                      type: object
                      properties: {}
            text/javascript:
              schema:
                type: object
                properties:
                  zipCodes:
                    type: array
                    items:
                      type: object
                      properties: {}
      deprecated: false
  /consumers/checkPin:
    post:
      tags:
        - consumer
      description: Compare pin
      summary: Compare pin
      operationId: consumer.checkPin
      requestBody:
        content:
          application/json:
            schema:
              required:
                - pin
              properties:
                pin:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              required:
                - pin
              properties:
                pin:
                  type: string
          application/xml:
            schema:
              required:
                - pin
              properties:
                pin:
                  type: string
          text/xml:
            schema:
              required:
                - pin
              properties:
                pin:
                  type: string
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
      deprecated: false
  /consumers/resetUser:
    post:
      tags:
        - consumer
      description: Reset user
      summary: Reset user
      operationId: consumer.resetUser
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /consumers/closeAccount:
    post:
      tags:
        - consumer
      description: Close account
      summary: Close account
      operationId: consumer.closeAccount
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /consumers/acceptTerms:
    post:
      tags:
        - consumer
      description: Set privacy flag
      summary: Set privacy flag
      operationId: consumer.acceptTerms
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /consumers/acceptPromotionEmails:
    post:
      tags:
        - consumer
      description: Set privacy flag
      summary: Set privacy flag
      operationId: consumer.acceptPromotionEmails
      requestBody:
        content:
          application/json:
            schema:
              properties:
                flag:
                  type: boolean
          application/x-www-form-urlencoded:
            schema:
              properties:
                flag:
                  type: boolean
          application/xml:
            schema:
              properties:
                flag:
                  type: boolean
          text/xml:
            schema:
              properties:
                flag:
                  type: boolean
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /consumers/selectLanguage:
    post:
      tags:
        - consumer
      description: Set application language
      summary: Set application language
      operationId: consumer.selectLanguage
      requestBody:
        content:
          application/json:
            schema:
              properties:
                language:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                language:
                  type: string
          application/xml:
            schema:
              properties:
                language:
                  type: string
          text/xml:
            schema:
              properties:
                language:
                  type: string
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /consumers/getHistory:
    get:
      tags:
        - consumer
      description: Get history
      summary: Get history
      operationId: consumer.getHistory
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      type: object
                      properties: {}
            application/xml:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      type: object
                      properties: {}
            text/xml:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      type: object
                      properties: {}
            application/javascript:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      type: object
                      properties: {}
            text/javascript:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      type: object
                      properties: {}
      deprecated: false
  /consumers/acceptMarketingMaterials:
    post:
      tags:
        - consumer
      description: Set marketing materials flag
      summary: Set marketing materials flag
      operationId: consumer.acceptMarketingMaterials
      requestBody:
        content:
          application/json:
            schema:
              properties:
                flag:
                  type: boolean
          application/x-www-form-urlencoded:
            schema:
              properties:
                flag:
                  type: boolean
          application/xml:
            schema:
              properties:
                flag:
                  type: boolean
          text/xml:
            schema:
              properties:
                flag:
                  type: boolean
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /consumers/validate:
    post:
      tags:
        - consumer
      description: Validate consumer by mobile
      summary: Validate consumer by mobile
      operationId: consumer.validate
      requestBody:
        content:
          application/json:
            schema:
              required:
                - mobile
              properties:
                mobile:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              required:
                - mobile
              properties:
                mobile:
                  type: string
          application/xml:
            schema:
              required:
                - mobile
              properties:
                mobile:
                  type: string
          text/xml:
            schema:
              required:
                - mobile
              properties:
                mobile:
                  type: string
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties: {}
            application/xml:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties: {}
            text/xml:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties: {}
            application/javascript:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties: {}
            text/javascript:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties: {}
      deprecated: false
  /consumers/pinLogin:
    post:
      tags:
        - consumer
      description: Login consumer by pin
      summary: Login consumer by pin
      operationId: consumer.pinLogin
      requestBody:
        content:
          application/json:
            schema:
              required:
                - mobile
                - pin
              properties:
                mobile:
                  type: string
                pin:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              required:
                - mobile
                - pin
              properties:
                mobile:
                  type: string
                pin:
                  type: string
          application/xml:
            schema:
              required:
                - mobile
                - pin
              properties:
                mobile:
                  type: string
                pin:
                  type: string
          text/xml:
            schema:
              required:
                - mobile
                - pin
              properties:
                mobile:
                  type: string
                pin:
                  type: string
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  '':
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  token:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  token:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  token:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  token:
                    type: string
      deprecated: false
  /consumers/getCoupons:
    get:
      tags:
        - consumer
      description: Get consumer coupons
      summary: Get consumer coupons
      operationId: consumer.getCoupons
      parameters:
        - name: status
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  coupons:
                    type: array
                    items:
                      type: object
                      properties: {}
            application/xml:
              schema:
                type: object
                properties:
                  coupons:
                    type: array
                    items:
                      type: object
                      properties: {}
            text/xml:
              schema:
                type: object
                properties:
                  coupons:
                    type: array
                    items:
                      type: object
                      properties: {}
            application/javascript:
              schema:
                type: object
                properties:
                  coupons:
                    type: array
                    items:
                      type: object
                      properties: {}
            text/javascript:
              schema:
                type: object
                properties:
                  coupons:
                    type: array
                    items:
                      type: object
                      properties: {}
      deprecated: false
  /consumers/acceptBenefitForfeiture:
    post:
      tags:
        - consumer
      description: Set benefit forfeiture flag
      summary: Set benefit forfeiture flag
      operationId: consumer.acceptBenefitForfeiture
      requestBody:
        content:
          application/json:
            schema:
              properties:
                flag:
                  type: boolean
          application/x-www-form-urlencoded:
            schema:
              properties:
                flag:
                  type: boolean
          application/xml:
            schema:
              properties:
                flag:
                  type: boolean
          text/xml:
            schema:
              properties:
                flag:
                  type: boolean
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /consumers/sendRecoverOtp:
    post:
      tags:
        - consumer
      description: Send recover otp
      summary: Send recover otp
      operationId: consumer.sendRecoverOtp
      requestBody:
        content:
          application/json:
            schema:
              properties:
                mobile:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                mobile:
                  type: string
          application/xml:
            schema:
              properties:
                mobile:
                  type: string
          text/xml:
            schema:
              properties:
                mobile:
                  type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  otp:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  otp:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  otp:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  otp:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  otp:
                    type: string
      deprecated: false
  /consumers/saveRecoverPin:
    patch:
      tags:
        - consumer
      description: Save consumers pincode
      summary: Save consumers pincode
      operationId: consumer.saveRecoverPin
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - pin
              properties:
                pin:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              required:
                - pin
              properties:
                pin:
                  type: string
          application/xml:
            schema:
              required:
                - pin
              properties:
                pin:
                  type: string
          text/xml:
            schema:
              required:
                - pin
              properties:
                pin:
                  type: string
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  token:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  token:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  token:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  token:
                    type: string
      deprecated: false
  /consumers/validateRecoverOtp:
    post:
      tags:
        - consumer
      description: Validate recover otp
      summary: Validate recover otp
      operationId: consumer.validateRecoverOtp
      requestBody:
        content:
          application/json:
            schema:
              required:
                - otp
              properties:
                otp:
                  type: number
                  format: double
                mobile:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              required:
                - otp
              properties:
                otp:
                  type: number
                  format: double
                mobile:
                  type: string
          application/xml:
            schema:
              required:
                - otp
              properties:
                otp:
                  type: number
                  format: double
                mobile:
                  type: string
          text/xml:
            schema:
              required:
                - otp
              properties:
                otp:
                  type: number
                  format: double
                mobile:
                  type: string
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                  isCardExists:
                    type: boolean
                  token:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                  isCardExists:
                    type: boolean
                  token:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                  isCardExists:
                    type: boolean
                  token:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                  isCardExists:
                    type: boolean
                  token:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                  isCardExists:
                    type: boolean
                  token:
                    type: string
      deprecated: false
  /consumers/checkLastDigits:
    post:
      tags:
        - consumer
      description: Check last 4 digits
      summary: Check last 4 digits
      operationId: consumer.checkLastDigits
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - digits
              properties:
                mobile:
                  type: string
                digits:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              required:
                - digits
              properties:
                mobile:
                  type: string
                digits:
                  type: string
          application/xml:
            schema:
              required:
                - digits
              properties:
                mobile:
                  type: string
                digits:
                  type: string
          text/xml:
            schema:
              required:
                - digits
              properties:
                mobile:
                  type: string
                digits:
                  type: string
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
      deprecated: false
  /consumers/consumerLogout:
    post:
      tags:
        - consumer
      description: Logout user
      summary: Logout user
      operationId: consumer.consumerLogout
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /consumers/tokenLogin:
    post:
      tags:
        - consumer
      description: Login consumer by one time token
      summary: Login consumer by one time token
      operationId: consumer.tokenLogin
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                token:
                  type: string
          application/xml:
            schema:
              properties:
                token:
                  type: string
          text/xml:
            schema:
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  orderId:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  orderId:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  orderId:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  orderId:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  orderId:
                    type: string
      deprecated: false
  /consumers/exposition:
    get:
      tags:
        - consumer
      description: Get consumer exposition
      summary: Get consumer exposition
      operationId: consumer.exposition
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  exposition:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  exposition:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  exposition:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  exposition:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  exposition:
                    type: number
                    format: double
      deprecated: false
  '/transactions/{id}':
    get:
      tags:
        - transaction
      description: 'Find a model instance by {{id}} from the data source.'
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: transaction.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          schema:
            type: string
            format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          schema:
            type: string
            format: JSON
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction'
            application/xml:
              schema:
                $ref: '#/components/schemas/transaction'
            text/xml:
              schema:
                $ref: '#/components/schemas/transaction'
            application/javascript:
              schema:
                $ref: '#/components/schemas/transaction'
            text/javascript:
              schema:
                $ref: '#/components/schemas/transaction'
      deprecated: false
  '/transactions/{id}/process':
    post:
      tags:
        - transaction
      description: Consume a transaction
      summary: Consume a transaction
      operationId: transaction.process
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
            format: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  format: double
                currency:
                  type: string
                externalId:
                  type: string
                itemsList:
                  type: string
                  format: JSON
                storeId:
                  type: string
                posId:
                  type: string
                documentId:
                  type: string
                __simulatedDelay:
                  type: number
                  format: double
                __simulatedError:
                  type: string
              required:
                - amount
                - currency
                - storeId
          application/x-www-form-urlencoded:
            schema:
              required:
                - amount
                - currency
                - storeId
              properties:
                amount:
                  type: number
                  format: double
                currency:
                  type: string
                externalId:
                  type: string
                itemsList:
                  type: string
                  format: JSON
                storeId:
                  type: string
                posId:
                  type: string
                documentId:
                  type: string
                __simulatedDelay:
                  type: number
                  format: double
                __simulatedError:
                  type: string
          application/xml:
            schema:
              required:
                - amount
                - currency
                - storeId
              properties:
                amount:
                  type: number
                  format: double
                currency:
                  type: string
                externalId:
                  type: string
                itemsList:
                  type: string
                  format: JSON
                storeId:
                  type: string
                posId:
                  type: string
                documentId:
                  type: string
                __simulatedDelay:
                  type: number
                  format: double
                __simulatedError:
                  type: string
          text/xml:
            schema:
              required:
                - amount
                - currency
                - storeId
              properties:
                amount:
                  type: number
                  format: double
                currency:
                  type: string
                externalId:
                  type: string
                itemsList:
                  type: string
                  format: JSON
                storeId:
                  type: string
                posId:
                  type: string
                documentId:
                  type: string
                __simulatedDelay:
                  type: number
                  format: double
                __simulatedError:
                  type: string
        required: true
      responses:
        '202':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  amount:
                    type: number
                    format: double
                  currency:
                    type: string
                  type:
                    type: string
                  status:
                    type: string
                  itemsList:
                    type: array
                    items:
                      type: object
                  storeId:
                    type: string
                  posId:
                    type: null
                  documentId:
                    type: null
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  amount:
                    type: number
                    format: double
                  currency:
                    type: string
                  type:
                    type: string
                  status:
                    type: string
                  itemsList:
                    type: array
                    items:
                      type: object
                      properties: {}
                  storeId:
                    type: string
                  posId:
                    type: string
                  documentId:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  amount:
                    type: number
                    format: double
                  currency:
                    type: string
                  type:
                    type: string
                  status:
                    type: string
                  itemsList:
                    type: array
                    items:
                      type: object
                      properties: {}
                  storeId:
                    type: string
                  posId:
                    type: string
                  documentId:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  amount:
                    type: number
                    format: double
                  currency:
                    type: string
                  type:
                    type: string
                  status:
                    type: string
                  itemsList:
                    type: array
                    items:
                      type: object
                      properties: {}
                  storeId:
                    type: string
                  posId:
                    type: string
                  documentId:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  amount:
                    type: number
                    format: double
                  currency:
                    type: string
                  type:
                    type: string
                  status:
                    type: string
                  itemsList:
                    type: array
                    items:
                      type: object
                      properties: {}
                  storeId:
                    type: string
                  posId:
                    type: string
                  documentId:
                    type: string
      deprecated: false
      security:
        - MerchantAuth: []
  '/transactions/{id}/refund':
    post:
      tags:
        - transaction
      description: Refund a transaction
      summary: Refund a transaction
      operationId: transaction.refund
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
            format: integer
      requestBody:
        content:
          application/json:
            schema:
              required:
                - amount
                - currency
                - storeId
              properties:
                amount:
                  type: number
                  format: double
                currency:
                  type: string
                itemsList:
                  type: string
                  format: JSON
                storeId:
                  type: string
                posId:
                  type: string
                documentId:
                  type: string
                __simulatedDelay:
                  type: number
                  format: double
          application/x-www-form-urlencoded:
            schema:
              required:
                - amount
                - currency
                - storeId
              properties:
                amount:
                  type: number
                  format: double
                currency:
                  type: string
                itemsList:
                  type: string
                  format: JSON
                storeId:
                  type: string
                posId:
                  type: string
                documentId:
                  type: string
                __simulatedDelay:
                  type: number
                  format: double
          application/xml:
            schema:
              required:
                - amount
                - currency
                - storeId
              properties:
                amount:
                  type: number
                  format: double
                currency:
                  type: string
                itemsList:
                  type: string
                  format: JSON
                storeId:
                  type: string
                posId:
                  type: string
                documentId:
                  type: string
                __simulatedDelay:
                  type: number
                  format: double
          text/xml:
            schema:
              required:
                - amount
                - currency
                - storeId
              properties:
                amount:
                  type: number
                  format: double
                currency:
                  type: string
                itemsList:
                  type: string
                  format: JSON
                storeId:
                  type: string
                posId:
                  type: string
                documentId:
                  type: string
                __simulatedDelay:
                  type: number
                  format: double
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  amountBeforeRefund:
                    type: number
                    format: double
                  amount:
                    type: number
                    format: double
                  currency:
                    type: string
                  status:
                    type: string
                  storeId:
                    type: string
                  posId:
                    type: string
                  documentId:
                    type: string
                  originalPurchaseTimestamp:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  amountBeforeRefund:
                    type: number
                    format: double
                  amount:
                    type: number
                    format: double
                  currency:
                    type: string
                  status:
                    type: string
                  storeId:
                    type: string
                  posId:
                    type: string
                  documentId:
                    type: string
                  originalPurchaseTimestamp:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  amountBeforeRefund:
                    type: number
                    format: double
                  amount:
                    type: number
                    format: double
                  currency:
                    type: string
                  status:
                    type: string
                  storeId:
                    type: string
                  posId:
                    type: string
                  documentId:
                    type: string
                  originalPurchaseTimestamp:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  amountBeforeRefund:
                    type: number
                    format: double
                  amount:
                    type: number
                    format: double
                  currency:
                    type: string
                  status:
                    type: string
                  storeId:
                    type: string
                  posId:
                    type: string
                  documentId:
                    type: string
                  originalPurchaseTimestamp:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  amountBeforeRefund:
                    type: number
                    format: double
                  amount:
                    type: number
                    format: double
                  currency:
                    type: string
                  status:
                    type: string
                  storeId:
                    type: string
                  posId:
                    type: string
                  documentId:
                    type: string
                  originalPurchaseTimestamp:
                    type: string
      deprecated: false
  /transactions/getStatus:
    get:
      tags:
        - transaction
      description: Get transaction status
      summary: Get transaction status
      operationId: transaction.getStatus
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  creditRequestStatus:
                    type: string
                  paymentStatus:
                    type: string
                  refundStatus:
                    anyOf:
                      - type: string
                        properties: {}
                      - type: 'null'
                        properties: {}
                  timeBeforeExpiration:
                    type: number
                    format: double
                  isExpired:
                    type: boolean
                  amount:
                    anyOf:
                      - type: number
                        properties: {}
                      - type: 'null'
                        properties: {}
                  processingErrors:
                    type: array
                    items: {}
                  storeName:
                    anyOf:
                      - properties: {}
                        type: string
                      - type: 'null'
                        properties: {}
                  merchantDisplayName:
                    anyOf:
                      - properties: {}
                        type: string
                      - properties: {}
                        type: 'null'
                  confirmationNumber:
                    anyOf:
                      - type: string
                        properties: {}
                      - type: 'null'
                        properties: {}
                  barcodeId:
                    type: string
                  paymentRequestStatus:
                    anyOf:
                      - type: string
                        properties: {}
                      - type: 'null'
                        properties: {}
            application/xml:
              schema:
                type: object
                properties:
                  creditRequestStatus:
                    type: string
                  paymentStatus:
                    type: string
                  refundStatus:
                    type: string
                  timeBeforeExpiration:
                    type: number
                    format: double
                  isExpired:
                    type: boolean
                  amount:
                    type: number
                    format: double
                  processingErrors:
                    type: array
                    items:
                      type: object
                      properties: {}
                  storeName:
                    type: string
                  merchantDisplayName:
                    type: string
                  confirmationNumber:
                    type: string
                  barcodeId:
                    type: string
                  paymentRequestStatus:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  creditRequestStatus:
                    type: string
                  paymentStatus:
                    type: string
                  refundStatus:
                    type: string
                  timeBeforeExpiration:
                    type: number
                    format: double
                  isExpired:
                    type: boolean
                  amount:
                    type: number
                    format: double
                  processingErrors:
                    type: array
                    items:
                      type: object
                      properties: {}
                  storeName:
                    type: string
                  merchantDisplayName:
                    type: string
                  confirmationNumber:
                    type: string
                  barcodeId:
                    type: string
                  paymentRequestStatus:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  creditRequestStatus:
                    type: string
                  paymentStatus:
                    type: string
                  refundStatus:
                    type: string
                  timeBeforeExpiration:
                    type: number
                    format: double
                  isExpired:
                    type: boolean
                  amount:
                    type: number
                    format: double
                  processingErrors:
                    type: array
                    items:
                      type: object
                      properties: {}
                  storeName:
                    type: string
                  merchantDisplayName:
                    type: string
                  confirmationNumber:
                    type: string
                  barcodeId:
                    type: string
                  paymentRequestStatus:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  creditRequestStatus:
                    type: string
                  paymentStatus:
                    type: string
                  refundStatus:
                    type: string
                  timeBeforeExpiration:
                    type: number
                    format: double
                  isExpired:
                    type: boolean
                  amount:
                    type: number
                    format: double
                  processingErrors:
                    type: array
                    items:
                      type: object
                      properties: {}
                  storeName:
                    type: string
                  merchantDisplayName:
                    type: string
                  confirmationNumber:
                    type: string
                  barcodeId:
                    type: string
                  paymentRequestStatus:
                    type: string
      deprecated: false
      security:
        - ConsumerAuth: []
  /transactions/createPayment:
    post:
      tags:
        - transaction
      description: Create transaction
      summary: Create transaction
      operationId: transaction.createPayment
      parameters:
        - name: cancelId
          in: query
          schema:
            type: string
        - name: type
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactionId:
                    type: string
                  barcodeId:
                    type: string
                  approvedPaymentAmount:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  transactionId:
                    type: string
                  barcodeId:
                    type: string
                  approvedPaymentAmount:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  transactionId:
                    type: string
                  barcodeId:
                    type: string
                  approvedPaymentAmount:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  transactionId:
                    type: string
                  barcodeId:
                    type: string
                  approvedPaymentAmount:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  transactionId:
                    type: string
                  barcodeId:
                    type: string
                  approvedPaymentAmount:
                    type: number
                    format: double
      deprecated: false
      security:
        - ConsumerAuth: []
  /transactions/simulatePosScan:
    post:
      tags:
        - transaction
      description: POS Scan
      summary: POS Scan
      operationId: transaction.simulatePosScan
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                __simulatedError:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                __simulatedError:
                  type: string
          application/xml:
            schema:
              properties:
                __simulatedError:
                  type: string
          text/xml:
            schema:
              properties:
                __simulatedError:
                  type: string
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /transactions/validatePagoOtp:
    post:
      tags:
        - transaction
      description: Validate pago OTP
      summary: Validate pago OTP
      operationId: transaction.validatePagoOtp
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
                - otp
              properties:
                otp:
                  type: string
                id:
                  type: string
                __simulatedDelayOnValidation:
                  type: number
                  format: double
          application/x-www-form-urlencoded:
            schema:
              required:
                - id
                - otp
              properties:
                otp:
                  type: string
                id:
                  type: string
                __simulatedDelayOnValidation:
                  type: number
                  format: double
          application/xml:
            schema:
              required:
                - id
                - otp
              properties:
                otp:
                  type: string
                id:
                  type: string
                __simulatedDelayOnValidation:
                  type: number
                  format: double
          text/xml:
            schema:
              required:
                - id
                - otp
              properties:
                otp:
                  type: string
                id:
                  type: string
                __simulatedDelayOnValidation:
                  type: number
                  format: double
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
      deprecated: false
  /transactions/resendPagoOtp:
    post:
      tags:
        - transaction
      description: Resend pago otp
      summary: Resend pago otp
      operationId: transaction.resendPagoOtp
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /transactions/cancelCredit:
    post:
      tags:
        - transaction
      description: Cancel credit
      summary: Cancel credit
      operationId: transaction.cancelCredit
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cancelId:
                  type: string
                transactionId:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                cancelId:
                  type: string
                transactionId:
                  type: string
          application/xml:
            schema:
              properties:
                cancelId:
                  type: string
                transactionId:
                  type: string
          text/xml:
            schema:
              properties:
                cancelId:
                  type: string
                transactionId:
                  type: string
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /transactions/getDossier:
    get:
      tags:
        - transaction
      description: Get dossier
      summary: Get dossier
      operationId: transaction.getDossier
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  dossier:
                    type: object
                    properties: {}
            application/xml:
              schema:
                type: object
                properties:
                  dossier:
                    type: object
                    properties: {}
            text/xml:
              schema:
                type: object
                properties:
                  dossier:
                    type: object
                    properties: {}
            application/javascript:
              schema:
                type: object
                properties:
                  dossier:
                    type: object
                    properties: {}
            text/javascript:
              schema:
                type: object
                properties:
                  dossier:
                    type: object
                    properties: {}
      deprecated: false
  /transactions/sendPagoOTP:
    post:
      tags:
        - transaction
      description: Send Pagolight OTP
      summary: Send Pagolight OTP
      operationId: transaction.sendPagoOTP
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /transactions/acceptDossier:
    post:
      tags:
        - transaction
      description: Accept dossier
      summary: Accept dossier
      operationId: transaction.acceptDossier
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /transactions/simulateRefund:
    post:
      tags:
        - transaction
      description: Simulate refund
      summary: Simulate refund
      operationId: transaction.simulateRefund
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                id:
                  type: string
          application/xml:
            schema:
              properties:
                id:
                  type: string
          text/xml:
            schema:
              properties:
                id:
                  type: string
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /transactions/getMinimumPaymentAmount:
    get:
      tags:
        - transaction
      description: Get minimum payment amount
      summary: Get minimum payment amount
      operationId: transaction.getMinimumPaymentAmount
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  minimumPaymentAmount:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  minimumPaymentAmount:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  minimumPaymentAmount:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  minimumPaymentAmount:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  minimumPaymentAmount:
                    type: string
      deprecated: false
  /transactions/extendTransactionExpiration:
    patch:
      tags:
        - transaction
      description: Extend transaction expiration
      summary: Extend transaction expiration
      operationId: transaction.extendTransactionExpiration
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
              properties:
                id:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              required:
                - id
              properties:
                id:
                  type: string
          application/xml:
            schema:
              required:
                - id
              properties:
                id:
                  type: string
          text/xml:
            schema:
              required:
                - id
              properties:
                id:
                  type: string
        required: true
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /transactions/getUserActivityState:
    get:
      tags:
        - transaction
      description: Get state of user activity
      summary: Get state of user activity
      operationId: transaction.getUserActivityState
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactionId:
                    type: string
                  transactionType:
                    type: string
                  creditRequestStatus:
                    type: string
                  paymentStatus:
                    type: string
                  refundStatus:
                    type: string
                  timeBeforeExpiration:
                    type: number
                    format: double
                  approvedPaymentAmount:
                    type: number
                    format: double
                  amount:
                    type: number
                    format: double
                  barcodeId:
                    type: string
                  processingErrors:
                    type: array
                    items:
                      type: object
                      properties: {}
            application/xml:
              schema:
                type: object
                properties:
                  transactionId:
                    type: string
                  transactionType:
                    type: string
                  creditRequestStatus:
                    type: string
                  paymentStatus:
                    type: string
                  refundStatus:
                    type: string
                  timeBeforeExpiration:
                    type: number
                    format: double
                  approvedPaymentAmount:
                    type: number
                    format: double
                  amount:
                    type: number
                    format: double
                  barcodeId:
                    type: string
                  processingErrors:
                    type: array
                    items:
                      type: object
                      properties: {}
            text/xml:
              schema:
                type: object
                properties:
                  transactionId:
                    type: string
                  transactionType:
                    type: string
                  creditRequestStatus:
                    type: string
                  paymentStatus:
                    type: string
                  refundStatus:
                    type: string
                  timeBeforeExpiration:
                    type: number
                    format: double
                  approvedPaymentAmount:
                    type: number
                    format: double
                  amount:
                    type: number
                    format: double
                  barcodeId:
                    type: string
                  processingErrors:
                    type: array
                    items:
                      type: object
                      properties: {}
            application/javascript:
              schema:
                type: object
                properties:
                  transactionId:
                    type: string
                  transactionType:
                    type: string
                  creditRequestStatus:
                    type: string
                  paymentStatus:
                    type: string
                  refundStatus:
                    type: string
                  timeBeforeExpiration:
                    type: number
                    format: double
                  approvedPaymentAmount:
                    type: number
                    format: double
                  amount:
                    type: number
                    format: double
                  barcodeId:
                    type: string
                  processingErrors:
                    type: array
                    items:
                      type: object
                      properties: {}
            text/javascript:
              schema:
                type: object
                properties:
                  transactionId:
                    type: string
                  transactionType:
                    type: string
                  creditRequestStatus:
                    type: string
                  paymentStatus:
                    type: string
                  refundStatus:
                    type: string
                  timeBeforeExpiration:
                    type: number
                    format: double
                  approvedPaymentAmount:
                    type: number
                    format: double
                  amount:
                    type: number
                    format: double
                  barcodeId:
                    type: string
                  processingErrors:
                    type: array
                    items:
                      type: object
                      properties: {}
      deprecated: false
  /transactions/assignCoupon:
    post:
      tags:
        - transaction
      description: Assign a coupon to a transaction
      summary: Assign a coupon to a transaction
      operationId: transaction.assignCoupon
      requestBody:
        content:
          application/json:
            schema:
              required:
                - couponId
                - id
              properties:
                id:
                  type: string
                couponId:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              required:
                - couponId
                - id
              properties:
                id:
                  type: string
                couponId:
                  type: string
          application/xml:
            schema:
              required:
                - couponId
                - id
              properties:
                id:
                  type: string
                couponId:
                  type: string
          text/xml:
            schema:
              required:
                - couponId
                - id
              properties:
                id:
                  type: string
                couponId:
                  type: string
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
      deprecated: false
  /transactions/assignCoupons:
    post:
      tags:
        - transaction
      description: Assign multiple coupons to a transaction
      summary: Assign multiple coupons to a transaction
      operationId: transaction.assignCoupons
      requestBody:
        content:
          application/json:
            schema:
              required:
                - couponIds
                - id
              properties:
                id:
                  type: string
                couponIds:
                  type: string
                  format: JSON
          application/x-www-form-urlencoded:
            schema:
              required:
                - couponIds
                - id
              properties:
                id:
                  type: string
                couponIds:
                  type: string
                  format: JSON
          application/xml:
            schema:
              required:
                - couponIds
                - id
              properties:
                id:
                  type: string
                couponIds:
                  type: string
                  format: JSON
          text/xml:
            schema:
              required:
                - couponIds
                - id
              properties:
                id:
                  type: string
                couponIds:
                  type: string
                  format: JSON
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
      deprecated: false
  /transactions/createTransactionByOrder:
    post:
      tags:
        - transaction
      description: Create transaction by order
      summary: Create transaction by order
      operationId: transaction.createTransactionByOrder
      requestBody:
        content:
          application/json:
            schema:
              required:
                - cancelId
                - nOrderId
              properties:
                cancelId:
                  type: string
                nOrderId:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              required:
                - cancelId
                - nOrderId
              properties:
                cancelId:
                  type: string
                nOrderId:
                  type: string
          application/xml:
            schema:
              required:
                - cancelId
                - nOrderId
              properties:
                cancelId:
                  type: string
                nOrderId:
                  type: string
          text/xml:
            schema:
              required:
                - cancelId
                - nOrderId
              properties:
                cancelId:
                  type: string
                nOrderId:
                  type: string
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactionId:
                    type: string
                  barcodeId:
                    type: string
                  approvedPaymentAmount:
                    type: number
                    format: double
                  paymentStatus:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  transactionId:
                    type: string
                  barcodeId:
                    type: string
                  approvedPaymentAmount:
                    type: number
                    format: double
                  paymentStatus:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  transactionId:
                    type: string
                  barcodeId:
                    type: string
                  approvedPaymentAmount:
                    type: number
                    format: double
                  paymentStatus:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  transactionId:
                    type: string
                  barcodeId:
                    type: string
                  approvedPaymentAmount:
                    type: number
                    format: double
                  paymentStatus:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  transactionId:
                    type: string
                  barcodeId:
                    type: string
                  approvedPaymentAmount:
                    type: number
                    format: double
                  paymentStatus:
                    type: string
      deprecated: false
  /transactions/getAmountOfFlags:
    get:
      tags:
        - transaction
      description: Get amount of POL flags
      summary: Get amount of POL flags
      operationId: transaction.getAmountOfFlags
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  flagsAmount:
                    type: number
                    format: double
            application/xml:
              schema:
                type: object
                properties:
                  flagsAmount:
                    type: number
                    format: double
            text/xml:
              schema:
                type: object
                properties:
                  flagsAmount:
                    type: number
                    format: double
            application/javascript:
              schema:
                type: object
                properties:
                  flagsAmount:
                    type: number
                    format: double
            text/javascript:
              schema:
                type: object
                properties:
                  flagsAmount:
                    type: number
                    format: double
      deprecated: false
  /transactions/resendRefundEmail:
    post:
      tags:
        - transaction
      description: Resend refund email for merchant
      summary: Resend refund email for merchant
      operationId: transaction.resendRefundEmail
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                id:
                  type: string
          application/xml:
            schema:
              properties:
                id:
                  type: string
          text/xml:
            schema:
              properties:
                id:
                  type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
      deprecated: false
  /transactions/scoringCheck:
    post:
      tags:
        - transaction
      description: Check scoring
      summary: Check scoring
      operationId: transaction.scoringCheck
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  creditLimit:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  creditLimit:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  creditLimit:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  creditLimit:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  creditLimit:
                    type: string
      deprecated: false
  /otp/otpLogin:
    post:
      tags:
        - otp
      description: Login a consumer by using an OTP
      summary: Login a consumer by using an OTP
      operationId: otp.otpLogin
      requestBody:
        content:
          application/json:
            schema:
              required:
                - mobile
                - otp
              properties:
                mobile:
                  type: string
                otp:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              required:
                - mobile
                - otp
              properties:
                mobile:
                  type: string
                otp:
                  type: string
          application/xml:
            schema:
              required:
                - mobile
                - otp
              properties:
                mobile:
                  type: string
                otp:
                  type: string
          text/xml:
            schema:
              required:
                - mobile
                - otp
              properties:
                mobile:
                  type: string
                otp:
                  type: string
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  token:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  token:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  token:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  token:
                    type: string
      deprecated: false
  /otp/otpCreate:
    post:
      tags:
        - otp
      description: Create a consumer by using an OTP
      summary: Create a consumer by using an OTP
      operationId: otp.otpCreate
      requestBody:
        content:
          application/json:
            schema:
              required:
                - mobile
              properties:
                mobile:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              required:
                - mobile
              properties:
                mobile:
                  type: string
          application/xml:
            schema:
              required:
                - mobile
              properties:
                mobile:
                  type: string
          text/xml:
            schema:
              required:
                - mobile
              properties:
                mobile:
                  type: string
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  mobile:
                    type: string
                  isNew:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  mobile:
                    type: string
                  isNew:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  mobile:
                    type: string
                  isNew:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  mobile:
                    type: string
                  isNew:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  mobile:
                    type: string
                  isNew:
                    type: string
      deprecated: false
  /cards/initSiaCard_deprecated:
    post:
      tags:
        - card
      description: Get SIA URL
      summary: Get SIA URL
      operationId: card.initSiaCard_deprecated
      requestBody:
        content:
          application/json:
            schema:
              properties:
                isCustomCallback:
                  type: number
                  format: double
                customCallbackUrl:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                isCustomCallback:
                  type: number
                  format: double
                customCallbackUrl:
                  type: string
          application/xml:
            schema:
              properties:
                isCustomCallback:
                  type: number
                  format: double
                customCallbackUrl:
                  type: string
          text/xml:
            schema:
              properties:
                isCustomCallback:
                  type: number
                  format: double
                customCallbackUrl:
                  type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  url:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  url:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  url:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  url:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  url:
                    type: string
      deprecated: false
  /cards/completeSiaCard_deprecated:
    post:
      tags:
        - card
      description: Verify card
      summary: Verify card
      operationId: card.completeSiaCard_deprecated
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  type: string
                backUrl:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                id:
                  type: string
                backUrl:
                  type: string
          application/xml:
            schema:
              properties:
                id:
                  type: string
                backUrl:
                  type: string
          text/xml:
            schema:
              properties:
                id:
                  type: string
                backUrl:
                  type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  lastDigits:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  lastDigits:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  lastDigits:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  lastDigits:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  lastDigits:
                    type: string
      deprecated: false
  /cards/hasCard:
    get:
      tags:
        - card
      description: Check if user has card
      summary: Check if user has card
      operationId: card.hasCard
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  result:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  result:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: string
      deprecated: false
  /cards/getCards:
    get:
      tags:
        - card
      description: Get users cards
      summary: Get users cards
      operationId: card.getCards
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  cards:
                    type: array
                    items:
                      type: object
                      properties: {}
            application/xml:
              schema:
                type: object
                properties:
                  cards:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  cards:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  cards:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  cards:
                    type: string
      deprecated: false
  /cards/initEcpCard:
    post:
      tags:
        - card
      description: Init ECP card
      summary: Init ECP card
      operationId: card.initEcpCard
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  url:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  url:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  url:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  url:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  url:
                    type: string
      deprecated: false
  /cards/getCardInfo:
    get:
      tags:
        - card
      description: Returns card info
      summary: Returns card info
      operationId: card.getCardInfo
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  card:
                    type: object
                    properties: {}
            application/xml:
              schema:
                type: object
                properties:
                  card:
                    type: object
                    properties: {}
            text/xml:
              schema:
                type: object
                properties:
                  card:
                    type: object
                    properties: {}
            application/javascript:
              schema:
                type: object
                properties:
                  card:
                    type: object
                    properties: {}
            text/javascript:
              schema:
                type: object
                properties:
                  card:
                    type: object
                    properties: {}
      deprecated: false
  /cards/validateBIN:
    post:
      tags:
        - card
      description: Validate BIN number of the card
      summary: Validate BIN number of the card
      operationId: card.validateBIN
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bin:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                bin:
                  type: string
          application/xml:
            schema:
              properties:
                bin:
                  type: string
          text/xml:
            schema:
              properties:
                bin:
                  type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  bin:
                    type: string
                  type:
                    type: string
                  scheme:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  bin:
                    type: string
                  type:
                    type: string
                  scheme:
                    type: string
            text/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  bin:
                    type: string
                  type:
                    type: string
                  scheme:
                    type: string
            application/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  bin:
                    type: string
                  type:
                    type: string
                  scheme:
                    type: string
            text/javascript:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  bin:
                    type: string
                  type:
                    type: string
                  scheme:
                    type: string
      deprecated: false
  /paymentRequest/getOrderDetails:
    get:
      tags:
        - paymentRequest
      description: Get order details
      summary: Get order details
      operationId: paymentRequest.getOrderDetails
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    type: object
                    properties: {}
            application/xml:
              schema:
                type: object
                properties:
                  order:
                    type: object
                    properties: {}
            text/xml:
              schema:
                type: object
                properties:
                  order:
                    type: object
                    properties: {}
            application/javascript:
              schema:
                type: object
                properties:
                  order:
                    type: object
                    properties: {}
            text/javascript:
              schema:
                type: object
                properties:
                  order:
                    type: object
                    properties: {}
      deprecated: false
  /paymentRequest/getLandingDetails:
    get:
      tags:
        - paymentRequest
      description: Get order details for non logged user
      summary: Get order details for non logged user
      operationId: paymentRequest.getLandingDetails
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    type: object
                    properties: {}
            application/xml:
              schema:
                type: object
                properties:
                  order:
                    type: object
                    properties: {}
            text/xml:
              schema:
                type: object
                properties:
                  order:
                    type: object
                    properties: {}
            application/javascript:
              schema:
                type: object
                properties:
                  order:
                    type: object
                    properties: {}
            text/javascript:
              schema:
                type: object
                properties:
                  order:
                    type: object
                    properties: {}
      deprecated: false
  /paymentRequest/getPaymentDetails:
    get:
      tags:
        - paymentRequest
      description: Get order details for authorized user
      summary: Get order details for authorized user
      operationId: paymentRequest.getPaymentDetails
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    type: object
                    properties: {}
            application/xml:
              schema:
                type: object
                properties:
                  order:
                    type: object
                    properties: {}
            text/xml:
              schema:
                type: object
                properties:
                  order:
                    type: object
                    properties: {}
            application/javascript:
              schema:
                type: object
                properties:
                  order:
                    type: object
                    properties: {}
            text/javascript:
              schema:
                type: object
                properties:
                  order:
                    type: object
                    properties: {}
      deprecated: false
  /paymentRequest/initPaymentSession:
    get:
      tags:
        - paymentRequest
      description: Initialize payment session
      summary: Initialize payment session
      operationId: paymentRequest.initPaymentSession
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
      deprecated: false
  /notificationTokens/setNotificationToken:
    post:
      tags:
        - notificationToken
      description: Set notification token
      summary: Set notification token
      operationId: notificationToken.setNotificationToken
      requestBody:
        content:
          application/json:
            schema:
              required:
                - token
              properties:
                token:
                  type: string
                type:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              required:
                - token
              properties:
                token:
                  type: string
                type:
                  type: string
          application/xml:
            schema:
              required:
                - token
              properties:
                token:
                  type: string
                type:
                  type: string
          text/xml:
            schema:
              required:
                - token
              properties:
                token:
                  type: string
                type:
                  type: string
        required: true
      responses:
        '204':
          description: Request was successful
          content: {}
      deprecated: false
  /SummaryMessages/getUnsentMessages:
    get:
      tags:
        - SummaryMessage
      description: Get unsent summary messages
      summary: Get unsent summary messages
      operationId: SummaryMessage.getUnsentMessages
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties: {}
            application/xml:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties: {}
            text/xml:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties: {}
            application/javascript:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties: {}
            text/javascript:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties: {}
      deprecated: false
  /SummaryMessages/resendMessage:
    post:
      tags:
        - SummaryMessage
      description: Resend summary message
      summary: Resend summary message
      operationId: SummaryMessage.resendMessage
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
              properties:
                id:
                  type: string
                  description: transaction id
          application/x-www-form-urlencoded:
            schema:
              required:
                - id
              properties:
                id:
                  type: string
                  description: transaction id
          application/xml:
            schema:
              required:
                - id
              properties:
                id:
                  type: string
                  description: transaction id
          text/xml:
            schema:
              required:
                - id
              properties:
                id:
                  type: string
                  description: transaction id
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            text/xml:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            application/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
            text/javascript:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
      deprecated: false
components:
  schemas:
    x-any:
      type: object
    Role:
      required:
        - name
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        name:
          type: string
        description:
          type: string
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
    new_RoleMapping:
      type: object
      properties:
        principalType:
          type: string
          description: 'The principal type, such as USER, APPLICATION, ROLE, or user model name in case of multiple user models'
        principalId:
          type: string
        roleId:
          $ref: '#/components/schemas/ObjectID'
      description: Map principals to roles
    RoleMapping:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        principalType:
          type: string
          description: 'The principal type, such as USER, APPLICATION, ROLE, or user model name in case of multiple user models'
        principalId:
          type: string
        roleId:
          $ref: '#/components/schemas/ObjectID'
      description: Map principals to roles
    new_Role:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
    AccessToken:
      required:
        - id
      type: object
      properties:
        id:
          type: string
        ttl:
          type: number
          description: time to live in seconds (2 weeks by default)
          format: double
          default: 1209600
        scopes:
          type: array
          description: Array of scopes granted to this access token.
          items:
            type: string
        created:
          type: string
          format: date-time
        userId:
          $ref: '#/components/schemas/ObjectID'
    new_user:
      required:
        - email
        - name
      type: object
      properties:
        name:
          type: string
        realm:
          type: string
        username:
          type: string
        email:
          type: string
        emailVerified:
          type: boolean
    user:
      required:
        - email
        - name
      type: object
      properties:
        name:
          type: string
        realm:
          type: string
        username:
          type: string
        email:
          type: string
        emailVerified:
          type: boolean
        id:
          $ref: '#/components/schemas/ObjectID'
    new_merchant:
      required:
        - createdAt
        - name
      type: object
      properties:
        name:
          type: string
        apiKey:
          type: string
        apiSecret:
          type: string
        username:
          type: string
        email:
          type: string
        storeId:
          type: string
        posId:
          type: string
        documentId:
          type: string
        createdAt:
          type: string
          format: date-time
        realm:
          type: string
        emailVerified:
          type: boolean
    merchant:
      required:
        - createdAt
        - name
      type: object
      properties:
        name:
          type: string
        apiKey:
          type: string
        apiSecret:
          type: string
        username:
          type: string
        email:
          type: string
        storeId:
          type: string
        posId:
          type: string
        documentId:
          type: string
        createdAt:
          type: string
          format: date-time
        realm:
          type: string
        emailVerified:
          type: boolean
        id:
          $ref: '#/components/schemas/ObjectID'
    new_store:
      required:
        - createdAt
      type: object
      properties:
        merchantId:
          $ref: '#/components/schemas/ObjectID'
        storeName:
          type: string
        storeId:
          type: string
        retailerId:
          type: string
        createdAt:
          type: string
          format: date-time
    store:
      required:
        - createdAt
      type: object
      properties:
        merchantId:
          $ref: '#/components/schemas/ObjectID'
        storeName:
          type: string
        storeId:
          type: string
        retailerId:
          type: string
        createdAt:
          type: string
          format: date-time
        id:
          $ref: '#/components/schemas/ObjectID'
    transaction:
      required:
        - createdAt
        - updatedAt
      type: object
      properties:
        amount:
          type: number
          format: double
        currency:
          type: string
        externalId:
          type: string
        paymentId:
          type: string
        itemsList:
          type: array
          items:
            $ref: '#/components/schemas/x-any'
        type:
          type: string
        creditBalance:
          type: number
          format: double
        creditRequestStatus:
          type: string
        paymentStatus:
          type: string
        status:
          type: string
        state:
          type: string
        cancelId:
          type: string
        acceptDossier:
          type: boolean
          default: false
        consumerIp:
          type: string
        consumerCardId:
          type: object
          properties: {}
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        timeBeforeExpiration:
          type: number
          format: double
        isExpired:
          type: boolean
          default: false
        referenceId:
          type: string
        refundProcessing:
          type: boolean
          default: false
        processingErrors:
          type: array
          items:
            $ref: '#/components/schemas/x-any'
        identityKey:
          type: string
        branch:
          type: string
        source:
          type: string
        userAgent:
          type: string
        isEmailSent:
          type: boolean
        id:
          $ref: '#/components/schemas/ObjectID'
        consumerId:
          $ref: '#/components/schemas/ObjectID'
        merchantId:
          $ref: '#/components/schemas/ObjectID'
    ObjectID:
      pattern: '^[a-fA-F\d]{24}$'
      type: string
  securitySchemes:
    ConsumerAuth:
      name: access_token
      type: apiKey
      in: query
    MerchantAuth:
      name: Authorization
      type: apiKey
      in: header
